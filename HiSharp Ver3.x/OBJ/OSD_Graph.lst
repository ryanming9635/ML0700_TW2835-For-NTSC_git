C51 COMPILER V9.50a   OSD_GRAPH                                                            01/10/2018 09:41:59 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE OSD_GRAPH
OBJECT MODULE PLACED IN .\OBJ\OSD_Graph.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE OSD_Graph.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ
                    -\OSD_Graph.lst) TABS(2) OBJECT(.\OBJ\OSD_Graph.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDCtrl.C
  10          //
  11          //  Purpose: Implementation of OSD Control.
  12          //
  13          //  Version: 0.01                                   2007/5/7 09:04¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2007/5/7 09:04¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "BusCtrl.h"
  35          #include "OSD_Graph.h"
  36          #include "OSDCtrl.h"
  37          
  38          #include "Graph.h"
  39          #include "Main.h"  //Pinchi 20150324 add
  40          
  41          
  42          //  ------------------------------------
  43          //      Macro Definitions
  44          //  ------------------------------------ 
  45          #define WriteByteOSD(b, c)      PCT_WriteAsicByte(0, DVC_PG2, b, c)
  46          #define ReadByteOSD(a)        PCT_ReadAsicByte(0, DVC_PG2, a)
  47          #define ReadOSDMemWr()        PCT_ReadAsicByte(0, DVC_PG2,0x0A)
  48          #define ReadOSDBufWr()        PCT_ReadAsicByte(0, DVC_PG2,0x04)
  49          
  50          
  51          //  ------------------------------------
  52          //      Type Definitions
  53          //  ------------------------------------
  54          
C51 COMPILER V9.50a   OSD_GRAPH                                                            01/10/2018 09:41:59 PAGE 2   

  55          //  ------------------------------------
  56          //      Variables Definitions
  57          //  ------------------------------------
  58            U8 graphattr;
  59          
  60          //  ------------------------------------
  61          //      Function Prototypes
  62          //  ------------------------------------
  63          
  64          
  65          // ===========================================================================
  66          //                      Parallel function description
  67          //            OSD Process by Graph Mode
  68          // ===========================================================================
  69          //
  70          // Set Graph attribute BLANK & MIX
  71          //
  72          void PCT_ClearGraphAttr(void)
  73          {
  74   1        graphattr = 0;
  75   1      }
  76          
  77          // ===========================================================================
  78          //
  79          // Set Graph attribute BLANK & MIX
  80          //
  81          #ifndef AWT_NO_SIGNAL_MSG  //Pinchi 20150331 add
  82          #ifdef HOLGER
  83          #else
                void PCT_PreSetGraphAttr(U8 _attribute)
                {
                  graphattr = _attribute;
                  //printf("=== Graph Attribute = %bx === \n", graphattr);
                }
              #endif
  90          #endif
  91          
  92          //==================================================================================
  93          //
  94          //
  95          //
  96          void PCT_OSD16x16GraphX(U8 _posx, U16 _posy, U8 _indx)
  97          {
  98   1        register U8 row, column, cntr, cntc,posx;
  99   1        PCHAR graph;  
 100   1        
 101   1        _posx <<= 1;
 102   1        posx = _posx = _posx + BOX_OFFSET_X;    
 103   1        _posy <<= 3;
 104   1        _posy += BOX_OFFSET_Y;
 105   1        graph = GRAPH_TABLE + (_indx*258);
 106   1        row = *graph++;
 107   1        column = *graph++;
 108   1        
 109   1        for(cntr=0; cntr<row; cntr++) {
 110   2          for(cntc=0; cntc<column; cntc+=4) {
 111   3            WriteByteOSD(0x00, graph[0]+graphattr);   //... 1st pixel
 112   3            WriteByteOSD(0x01, graph[1]+graphattr);   //... 2nd pixel
 113   3            WriteByteOSD(0x02, graph[2]+graphattr);   //... 3rd pixel
 114   3            WriteByteOSD(0x03, graph[3]+graphattr);   //... 4th pixel
 115   3            WriteByteOSD(0x04, 0x80);         //... write to buffer
 116   3            graph+=4;
C51 COMPILER V9.50a   OSD_GRAPH                                                            01/10/2018 09:41:59 PAGE 3   

 117   3        
 118   3            WriteByteOSD(0x05, posx);
 119   3            WriteByteOSD(0x07, _posy&0xff);
 120   3        
 121   3            WriteByteOSD(0x09, ((_posy)>>8)<<2 );             //... start: OSD_POS_V_ODD, end: OSD_POS_V_ODD
 122   3            WriteByteOSD(0x0A, 0x80|(ReadByteOSD(0x0A)&0x3F));        //... x path
 123   3            while(ReadOSDMemWr()&BIT7);                   //... wait finishing write for odd field
 124   3        
 125   3            WriteByteOSD(0x09, (((_posy)>>8)<<2)|0x08);           //... start: OSD_POS_V_Even, end: OSD_POS_V_Even
 126   3            WriteByteOSD(0x0A, 0x80|(ReadByteOSD(0x0A)&0x3F));        //... x path
 127   3            while(ReadOSDMemWr()&BIT7);                   //... wait finishing write for odd field
 128   3      
 129   3            posx++;
 130   3          }
 131   2          posx = _posx;
 132   2          _posy++;
 133   2        }
 134   1      }
 135          
 136          //==================================================================================
 137          //
 138          //
 139          //
 140          void PCT_ShowGraphString(U8 _path, U8 _addrx, U8 _addry, PCHAR _strptr)
 141          {
 142   1        register signed char slen;
 143   1      
 144   1        slen = strlen(_strptr);
 145   1        if(slen<0) return;
 146   1      #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 147   1        _ifBitSet(_path, PTH_X)
 148   1      #else
                ifBitSet(_path, PTH_X)
              #endif
 151   1        {
 152   2          do{
 153   3            PCT_OSD16x16GraphX(_addrx, _addry, _strptr[0]);
 154   3            slen --;
 155   3            _strptr++;
 156   3            _addrx+=2;
 157   3          }while(slen>0);
 158   2        } else {
 159   2          do{
 160   3          }while(slen>0);
 161   2        }
 162   1        PTC_SwitchToI2CMode();
 163   1      
 164   1      }
 165          
 166          //==================================================================================
 167          //
 168          //
 169          //
 170          
 171          
 172          // ===========================================================================
 173          // END of File 
 174          // ===========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    531    ----
C51 COMPILER V9.50a   OSD_GRAPH                                                            01/10/2018 09:41:59 PAGE 4   

   CONSTANT SIZE    =   9446    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1      18
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
