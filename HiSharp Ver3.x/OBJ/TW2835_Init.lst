C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/16/2021 11:15:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TW2835_INIT
OBJECT MODULE PLACED IN .\OBJ\TW2835_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TW2835_Init.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -OBJ\TW2835_Init.lst) TABS(2) OBJECT(.\OBJ\TW2835_Init.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: TW2835_Init.C
  10          //
  11          //  Purpose: Implementation of TW2835_Init.
  12          //
  13          //  Version: 0.01                                   2006/10/31 05:42¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/31 05:42¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "Timer.h"
  35          #include "TW2835_Init.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "TW28xx_Video.h"
  39          #include "OSDAction.h"
  40          
  41          #include "TW2835_Table.h"
  42          #include "Main.h"
  43          
  44          #include "Printf.h"
  45          #include "monitor.h"
  46          
  47          //  ------------------------------------
  48          //      Macro Definitions
  49          //  ------------------------------------ 
  50          
  51          
  52          //  ------------------------------------
  53          //      Type Definitions
  54          //  ------------------------------------
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/16/2021 11:15:09 PAGE 2   

  55          sbit RSTn = P3 ^ 4;
  56          
  57          
  58          //  ------------------------------------
  59          //      Variables Definitions
  60          //  ------------------------------------
  61          
  62          BYTE TW2837IDCheck=FALSE;
  63          
  64          //  ------------------------------------
  65          //      Function Prototypes
  66          //  ------------------------------------
  67          
  68          
  69          // ===========================================================================
  70          //                      Parallel function description
  71          // ===========================================================================
  72          //
  73          //  TW2835 IC Reset
  74          //
  75          void PCT_InitialTW2835(void)
  76          {
  77   1        PCT_TW2835ResetN();
  78   1        SYSTYPE = DEF_SYSTEM;
  79   1      
  80   1        // Waitting Color Lock
  81   1        EnUserTimer(USERTMID1,10);
  82   1      
  83   1        PCT_TW2837IDCheck();
  84   1      
  85   1        while(USERTMVAL1!=1) {
  86   2        
  87   2          if(TW2837IDCheck==TRUE)
  88   2            {
  89   3            Wait_ms(10+20);
  90   3      
  91   3            if( (TW28_ReadByte(0, SENSORCHANNEL<<4)&0xC0) == 0x40) {
  92   4            SYSTYPE = PCT_DetectVideoFormat(SENSORCHANNEL);
  93   4            break;
  94   4            }
  95   3          
  96   3            }
  97   2          else
  98   2            {
  99   3              if( (TW28_ReadByte(0, SENSORCHANNEL<<4)&0x0F) == 0x0F) {
 100   4              SYSTYPE = PCT_DetectVideoFormat(SENSORCHANNEL);
 101   4              break;
 102   4              }
 103   3      
 104   3            }
 105   2          Wait_ms(10);
 106   2        }
 107   1        DisUserTimer(USERTMID1);
 108   1        
 109   1        PCT_TW2835_Initial();
 110   1        PCT_InitialOSD();
 111   1      }
 112          
 113          // ===========================================================================
 114          //
 115          //  TW2835 IC Reset
 116          //
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/16/2021 11:15:09 PAGE 3   

 117          void PCT_TW2835ResetN(void)
 118          {
 119   1        register U16 _delay; 
 120   1      //Kane @HS 2007 0723 Ver3.4>>>>
 121   1      #if 0
                // Initial RssetN for TW2835
                DELAY_FOR(5000);
                RSTn = 0;
                DELAY_FOR(10000);
                RSTn = 1;
                DELAY_FOR(5000);
                RSTn = 0;
                DELAY_FOR(10000);
                RSTn = 1;
                DELAY_FOR(5000);
              #endif
 133   1        RSTn = 0;
 134   1        DELAY_FOR(100);////about 1.2ms
 135   1        RSTn = 1;
 136   1      //Kane @HS 2007 0723 Ver3.4<<<<
 137   1      }
 138          // ===========================================================================
 139          //
 140          //  TW2837 ID check
 141          //
 142          // ===========================================================================
 143          
 144          void PCT_TW2837IDCheck(void)
 145          {
 146   1        if( (TW28_ReadByte(0, 0xFE)&0x30) == 0x30) 
 147   1          TW2837IDCheck=TRUE;
 148   1        else 
 149   1          TW2837IDCheck=FALSE;
 150   1      }
 151          
 152          // ===========================================================================
 153          //
 154          //  Video Initial Procedure
 155          //
 156          void PCT_TW2835_Initial(void)
 157          {
 158   1        register U16 offset;
 159   1        
 160   1        offset = SYSTYPE * 256; 
 161   1      if(TW2837IDCheck==TRUE)
 162   1      {
 163   2      
 164   2        TW28_WriteTable(0x00, 0x00, TW2837_Page0+offset, ((16*5)+8));
 165   2      
 166   2        TW28_WriteTable(0x00, 0x60, (TW2837_Page0+offset+0x60), (16));
 167   2        TW28_WriteTable(0x00, 0x70, (TW2837_Page0+offset+0x70), (4));
 168   2        
 169   2        TW28_WriteTable(0x00, 0x80, (TW2837_Page0+offset+0x80), (16*5));
 170   2      
 171   2        TW28_WriteTable(0x01, 0x00, TW2837_Page1+offset, 160);
 172   2      
 173   2        TW28_WriteTable(0x01, 0x30, TW2837_Page1+offset+0x30, 32);
 174   2        
 175   2        TW28_WriteTable(0x01, 0xA0, TW2837_Page1+offset+0xA0, 16);
 176   2      
 177   2      
 178   2        TW28_WriteTable(0x02, 0x10, TW2837_Page2, (16*3));
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/16/2021 11:15:09 PAGE 4   

 179   2        TW28_WriteTable(0x02, 0x50, TW2837_Page2+0x30, (16*1));
 180   2        TW28_WriteTable(0x02, 0x60, TW2837_Page2+0x40, (16*4));
 181   2      
 182   2        if(SYSTYPE == VDO_NTSC){
 183   3          TW28_WriteTable(DVC_PG1,0x30,tbl_ntsc_pg1_pic_qd,16);   //... normal quad
 184   3          TW28_WriteTable(DVC_PG1,0x40,tbl_ntsc_pg1_pic_9_rb,16);
 185   3          TW28_WriteTable(DVC_PG1,0xa0,tbl_ntsc_pg1_enc,16);  
 186   3          TW28_WriteByte(DVC_PG1,0x00,0x00);
 187   3        }
 188   2        else{
 189   3          TW28_WriteTable(DVC_PG1,0x30,tbl_pal_pg1_pic_qd,16);      //... normal quad
 190   3          TW28_WriteTable(DVC_PG1,0x30,tbl_pal_pg1_pic_9_lt,16);    //... non-realtime
 191   3          TW28_WriteTable(DVC_PG1,0x40,tbl_pal_pg1_pic_9_rb,16);
 192   3          TW28_WriteTable(DVC_PG1,0xa0,tbl_pal_pg1_enc,16); 
 193   3          TW28_WriteByte(DVC_PG1,0x00,0x80);
 194   3        }
 195   2      
 196   2      }
 197   1      else
 198   1      {
 199   2          TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset, 192);
 200   2          TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset, 160);
 201   2        
 202   2          TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
 203   2        
 204   2          TW28_WriteTable(0x01, 0xA0, TW2835_Page1+offset+0xA0, 16);
 205   2      
 206   2      }
 207   1      
 208   1      
 209   1      
 210   1      }
 211          
 212          // ===========================================================================
 213          //
 214          //  Video Initial Procedure
 215          //
 216          void PCT_ChangeSystemType(U8 _sys)
 217          {
 218   1        register U16 offset;
 219   1        
 220   1        offset = _sys * 256;
 221   1      
 222   1        if(TW2837IDCheck==TRUE)
 223   1        { 
 224   2          TW28_WriteTable(0x00, 0x00, TW2837_Page0+offset+0x00, 64);
 225   2      
 226   2          TW28_WriteTable(0x01, 0x30, TW2837_Page1+offset+0x30, 32);
 227   2      
 228   2          TW28_WriteTable(0x01, 0x00, TW2837_Page1+offset+0x00, 1);
 229   2          TW28_WriteTable(0x01, 0xA7, TW2837_Page1+offset+0xA7, 3);
 230   2        }
 231   1        else
 232   1        {
 233   2          TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset+0x00, 64);
 234   2          
 235   2            TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
 236   2          
 237   2            TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset+0x00, 1);
 238   2            TW28_WriteTable(0x01, 0xA7, TW2835_Page1+offset+0xA7, 3);
 239   2      
 240   2        }
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/16/2021 11:15:09 PAGE 5   

 241   1      
 242   1      }
 243          
 244          // ===========================================================================
 245          //
 246          //
 247          //
 248          
 249          
 250          // ===========================================================================
 251          // END of File 
 252          // ===========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    839    ----
   CONSTANT SIZE    =   2320    ----
   XDATA SIZE       =      1       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
