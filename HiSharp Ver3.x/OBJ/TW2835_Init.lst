C51 COMPILER V9.60.0.0   TW2835_INIT                                                       06/18/2021 17:32:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TW2835_INIT
OBJECT MODULE PLACED IN .\OBJ\TW2835_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TW2835_Init.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -OBJ\TW2835_Init.lst) TABS(2) OBJECT(.\OBJ\TW2835_Init.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: TW2835_Init.C
  10          //
  11          //  Purpose: Implementation of TW2835_Init.
  12          //
  13          //  Version: 0.01                                   2006/10/31 05:42¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/31 05:42¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "Timer.h"
  35          #include "TW2835_Init.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "TW28xx_Video.h"
  39          #include "OSDAction.h"
  40          
  41          #include "TW2835_Table.h"
  42          #include "Main.h"
  43          
  44          
  45          
  46          //  ------------------------------------
  47          //      Macro Definitions
  48          //  ------------------------------------ 
  49          
  50          
  51          //  ------------------------------------
  52          //      Type Definitions
  53          //  ------------------------------------
  54          sbit RSTn = P3 ^ 4;
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       06/18/2021 17:32:21 PAGE 2   

  55          
  56          
  57          //  ------------------------------------
  58          //      Variables Definitions
  59          //  ------------------------------------
  60          
  61          
  62          //  ------------------------------------
  63          //      Function Prototypes
  64          //  ------------------------------------
  65          
  66          
  67          // ===========================================================================
  68          //                      Parallel function description
  69          // ===========================================================================
  70          //
  71          //  TW2835 IC Reset
  72          //
  73          void PCT_InitialTW2835(void)
  74          {
  75   1        PCT_TW2835ResetN();
  76   1        SYSTYPE = DEF_SYSTEM;
  77   1      
  78   1        // Waitting Color Lock
  79   1        EnUserTimer(USERTMID1,10);
  80   1      
  81   1        while(USERTMVAL1!=1) {
  82   2          if( (TW28_ReadByte(0, SENSORCHANNEL<<4)&0x0F) == 0x0F) {
  83   3            SYSTYPE = PCT_DetectVideoFormat(SENSORCHANNEL);
  84   3            break;
  85   3          }
  86   2          Wait_ms(10);
  87   2        }
  88   1        DisUserTimer(USERTMID1);
  89   1        PCT_TW2835_Initial();
  90   1        PCT_InitialOSD();
  91   1      
  92   1      
  93   1      }
  94          
  95          // ===========================================================================
  96          //
  97          //  TW2835 IC Reset
  98          //
  99          void PCT_TW2835ResetN(void)
 100          {
 101   1        register U16 _delay; 
 102   1      //Kane @HS 2007 0723 Ver3.4>>>>
 103   1      #if 0
                // Initial RssetN for TW2835
                DELAY_FOR(5000);
                RSTn = 0;
                DELAY_FOR(10000);
                RSTn = 1;
                DELAY_FOR(5000);
                RSTn = 0;
                DELAY_FOR(10000);
                RSTn = 1;
                DELAY_FOR(5000);
              #endif
 115   1        RSTn = 0;
 116   1        DELAY_FOR(100);////about 1.2ms
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       06/18/2021 17:32:21 PAGE 3   

 117   1        RSTn = 1;
 118   1      //Kane @HS 2007 0723 Ver3.4<<<<
 119   1      }
 120          
 121          // ===========================================================================
 122          //
 123          //  Video Initial Procedure
 124          //
 125          void PCT_TW2835_Initial(void)
 126          {
 127   1        register U16 offset;
 128   1        
 129   1        offset = SYSTYPE * 256; 
 130   1      
 131   1      #if (TW2837TABLE==ON)
 132   1        TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset, ((16*5)+8));
 133   1      
 134   1        TW28_WriteTable(0x00, 0x60, (TW2835_Page0+offset+0x60), ((16*6)+10));
 135   1      
 136   1        TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset, 160);
 137   1      
 138   1        TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
 139   1        
 140   1        TW28_WriteTable(0x01, 0xA0, TW2835_Page1+offset+0xA0, 16);
 141   1      
 142   1      #else
                TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset, 192);
              
                TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset, 160);
              
                TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
              
                TW28_WriteTable(0x01, 0xA0, TW2835_Page1+offset+0xA0, 16);
              #endif
 151   1      
 152   1      #if 1// (TW2837TABLE==ON)
 153   1      
 154   1        TW28_WriteTable(0x02, 0x10, TW2835_Page2, (16*3));
 155   1        TW28_WriteTable(0x02, 0x50, TW2835_Page2+0x30, (16*1));
 156   1        TW28_WriteTable(0x02, 0x60, TW2835_Page2+0x40, (16*4));
 157   1      
 158   1        if(SYSTYPE == VDO_NTSC){
 159   2          TW28_WriteTable(DVC_PG1,0x30,tbl_ntsc_pg1_pic_qd,16);   //... normal quad
 160   2          TW28_WriteTable(DVC_PG1,0x40,tbl_ntsc_pg1_pic_9_rb,16);
 161   2          TW28_WriteTable(DVC_PG1,0xa0,tbl_ntsc_pg1_enc,16);  
 162   2          TW28_WriteByte(DVC_PG1,0x00,0x00);
 163   2        }
 164   1        else{
 165   2          TW28_WriteTable(DVC_PG1,0x30,tbl_pal_pg1_pic_qd,16);      //... normal quad
 166   2          TW28_WriteTable(DVC_PG1,0x30,tbl_pal_pg1_pic_9_lt,16);    //... non-realtime
 167   2          TW28_WriteTable(DVC_PG1,0x40,tbl_pal_pg1_pic_9_rb,16);
 168   2          TW28_WriteTable(DVC_PG1,0xa0,tbl_pal_pg1_enc,16); 
 169   2          TW28_WriteByte(DVC_PG1,0x00,0x80);
 170   2        }
 171   1      #endif
 172   1      }
 173          
 174          // ===========================================================================
 175          //
 176          //  Video Initial Procedure
 177          //
 178          void PCT_ChangeSystemType(U8 _sys)
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       06/18/2021 17:32:21 PAGE 4   

 179          {
 180   1        register U16 offset;
 181   1        
 182   1        offset = _sys * 256;
 183   1        TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset+0x00, 64);
 184   1      
 185   1        TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
 186   1      
 187   1        TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset+0x00, 1);
 188   1        TW28_WriteTable(0x01, 0xA7, TW2835_Page1+offset+0xA7, 3);
 189   1      }
 190          
 191          // ===========================================================================
 192          //
 193          //
 194          //
 195          
 196          
 197          // ===========================================================================
 198          // END of File 
 199          // ===========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    579    ----
   CONSTANT SIZE    =   1296    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
