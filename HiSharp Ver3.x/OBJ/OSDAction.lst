C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE OSDACTION
OBJECT MODULE PLACED IN .\OBJ\OSDAction.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE OSDAction.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ
                    -\OSDAction.lst) TABS(2) OBJECT(.\OBJ\OSDAction.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDAction.C
  10          //
  11          //  Purpose: Implementation of OSD Action.
  12          //
  13          //  Version: 0.01                                   2006/12/25 09:43¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/12/25 09:43¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "TW28xx_Video.h"
  35          #include "Timer.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "OSDAction.h"
  39          #include "OSDCtrl.h"
  40          #include "OSD_Graph.h"
  41          #include "Main.h"  //Pinchi 20150323 add
  42          
  43          
  44          //  ------------------------------------
  45          //      Macro Definitions
  46          //  ------------------------------------ 
  47          #define GRAPH_FONT
  48          #ifndef GRAPH_FONT
                #define DrawString(a, b, c)   PCT_ShowOSDString(PTH_X, a, b, c)
              #else
  51            #define DrawString(a, b, c)   PCT_ShowGraphString(PTH_X, a, b, c)
  52          #endif
  53          
  54          #define LOCATE_XM0  20
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 2   

  55          #define LOCATE_XM1  41
  56          #define LOCATE_XM2  62
  57          
  58          #define LOCATE_YT0  0
  59          #define LOCATE_YT1  15
  60          #define LOCATE_YT2  18
  61          
  62          code unsigned char camstr[7][3]={ {0x05,'\0'},//"A",
  63                            {0x06,'\0'},//"B",
  64                            {0x07,'\0'},//"C",
  65                            {0x08,'\0'},//"R",
  66                            {0x09,'\0'},//"M",
  67                            {0x0A,'\0'},//"J",
  68                          #if 1  //Pinchi 20150513 add new 'S' for SEQ mode
  69                            {0x1F,'\0'},//"S",
  70                          #else
                                {0x12,'\0'},//"S",
                              #endif
  73          };
  74          
  75          //  ------------------------------------
  76          //      Type Definitions
  77          //  ------------------------------------
  78          
  79          
  80          //  ------------------------------------
  81          //      Variables Definitions
  82          //  ------------------------------------
  83            U8 bdata osdflage=0;
  84            sbit OSDPAGE2 = osdflage^0;
  85            sbit OSDPAGE3 = osdflage^1;
  86            sbit OSDPAGE4 = osdflage^2;
  87            sbit OSDPAGE5 = osdflage^3;
  88            U8 VlossCount;
  89            //bit VlossState;
  90          
  91            extern bit VlossFlag;
  92          
  93          //  ------------------------------------
  94          //      Function Prototypes
  95          //  ------------------------------------
  96          
  97          
  98          // ===========================================================================
  99          //                      Parallel function description
 100          // ===========================================================================
 101          //
 102          void PCT_InitialOSD(void)
 103          {
 104   1        data U8 page;
 105   1        //... OSD color index
 106   1        PCT_InitOSDColor();
 107   1        PCT_ClearGraphAttr();
 108   1      
 109   1        PCT_PreSetForegroundColor(OSD_COL_100WHT);
 110   1        PCT_PreSetBackgroundColor(OSD_COL_BLU);
 111   1        for(page=0; page<6; page++){
 112   2          PCT_SetOSDDrawPage(page);
 113   2          PCT_FullColorOnOSD(0,0,90,38);      //... max line num is 310 line for OSD
 114   2        }
 115   1        PCT_EnShowOSDPage(WRPHX_PAGE1);
 116   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 3   

 117   1        PCT_SetOSDDrawPage(WRPHY_PAGE0);
 118   1        PCT_FullColorOnOSD(0,0,90,38);        // ??
 119   1      
 120   1        SYSMODE=0;
 121   1      }
 122          
 123          // ===========================================================================
 124          //
 125          // PTH_X OSD Action
 126          //
 127          #define OSDBIT  BIT1
 128          void PCT_OSD_ActionPthX(PU8 _attr)
 129          {
 130   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
 131   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 132   1        switch(SYSMIXTYP) {
 133   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 134   2          // ------------------------------------ NTSC ----------------------------------------
 135   2          case VMIX_TYPE_N11:
 136   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 137   2            break;
 138   2      
 139   2          case VMIX_TYPE_N21:
 140   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
 141   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
 142   2            break;
 143   2      
 144   2          case VMIX_TYPE_N22:
 145   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 146   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 147   2            break;
 148   2      
 149   2          case VMIX_TYPE_N31:
 150   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 151   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
 152   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 153   2            break;
 154   2      
 155   2          case VMIX_TYPE_N32:
 156   2            break;
 157   2      
 158   2          case VMIX_TYPE_N33: // Turn LEFT
 159   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 160   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 161   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 162   2            break;
 163   2      
 164   2          case VMIX_TYPE_N34: // Turn RIGHT
 165   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 166   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 167   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 168   2            break;
 169   2      
 170   2          case VMIX_TYPE_N41: 
 171   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 172   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 173   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 174   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
 175   2            break;
 176   2      
 177   2          // ------------------------------------ PAL ----------------------------------------
 178   2          case VMIX_TYPE_P11: 
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 4   

 179   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 180   2            break;
 181   2      
 182   2          case VMIX_TYPE_P21: 
 183   2                  _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 9806
             -29
 184   2                  _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 9806
             -29
 185   2            break;
 186   2      
 187   2          case VMIX_TYPE_P22: 
 188   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 189   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 190   2            break;
 191   2      
 192   2          case VMIX_TYPE_P31: 
 193   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 194   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
 195   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 196   2            break;
 197   2      
 198   2          case VMIX_TYPE_P32: 
 199   2            break;
 200   2      
 201   2          case VMIX_TYPE_P33: // Turn LEFT
 202   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 203   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 204   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 205   2            break;
 206   2      
 207   2          case VMIX_TYPE_P34: // Turn RIGHT
 208   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 209   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 210   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 211   2            break;
 212   2      
 213   2          case VMIX_TYPE_P41: 
 214   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 215   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 216   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 217   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
 218   2            break;
 219   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_N21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_N31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 5   

                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_P21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_P31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 6   

                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
                    break;
                #endif
 306   2      
 307   2          default:
 308   2            break;
 309   2        }
 310   1      }
 311          
 312          // ===========================================================================
 313          //
 314          // Check Video Loss
 315          //
 316          void PCT_EnfalshVLoss(void)
 317          { 
 318   1        SYSVDOSGL |= BIT7;
 319   1      }
 320          
 321          // ===========================================================================
 322          //
 323          // Get Video Signal Status
 324          //
 325          void PCT_GetVideoSignalStatus(void)
 326          { 
 327   1        MSGVDOSGL = ReadSignalSta(0x01, 0x78)&0x0F;
 328   1      
 329   1        if(SYSVDOSGL == MSGVDOSGL) return;        // Check Video Loss
 330   1        // --------------- Processing Show VLoss ---------------
 331   1           //William-V3.10-20100206>>>>>>>>>>>>>>>>NTSC PAL Detect when Video Loss
 332   1        VlossFlag=1;
 333   1        TW28_WriteByte(0x00,0x31,TW28_ReadByte(0x00,0x31)&0x7f);
 334   1        //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 335   1      #ifdef AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
 336   1      //  if (VlossFlag == 0)
 337   1        {
 338   2      //    VlossFlag=1;
 339   2        PCT_ShowVLoss();
 340   2        }
 341   1      #else
                PCT_PreSetForegroundColor(OSD_COL_RED255|OSD_BLINK);
                PCT_PreSetGraphAttr(OSD_BLINK);
                PCT_ShowVLoss();
                PCT_ClearGraphAttr();
              #endif
 347   1        // -----------------------------------------------------
 348   1        SYSVDOSGL = MSGVDOSGL;
 349   1      }
 350          
 351          // ===========================================================================
 352          //
 353          // Show '<-' on OSD when Trun LEFT
 354          // Show '->' on OSD when Trun RIGHT
 355          //
 356          #define ILCT_X0 28
 357          #define ILCT_X1 49
 358          #define ILCT_X2 70
 359          #define ICONBIT 0x0C
 360          #define ICONSFT 2
 361          
 362          code unsigned char indicate_icon[] = {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 7   

 363            0x20,'\0',  //+ 0x20,'\0',
 364            0x0B,'\0',  //+ 0x02,'\0',
 365            0x0C,'\0',  //+ 0x03,'\0',
 366            0x0D,'\0',  //+ 0x04,'\0',
 367          };
 368          
 369          void PCT_ShowIndicateIcon(PU8 _attr)
 370          {
 371   1        data U8 iconid;
 372   1      //  printf("Command Shell for HiSharp Set S or J Mode");
 373   1        
 374   1        PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
 375   1        switch(SYSMIXTYP) {
 376   2          // ------------------------------------ NTSC & PAL ----------------------------------------
 377   2          case VMIX_TYPE_N11: 
 378   2          case VMIX_TYPE_P11: 
 379   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 380   2      
 381   2            if(iconid) {
 382   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 383   3              DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
 384   3            } 
 385   2            else {
 386   3              PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
 387   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 388   3              if (_attr[0] & 0x20)
 389   3              {
 390   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 391   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 392   4              }
 393   3              else
 394   3              {
 395   4                if (SYSMODE == 0) //Pinchi 20150422 add
 396   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 397   4              }
 398   3            #endif
 399   3            }
 400   2            break;
 401   2      
 402   2          case VMIX_TYPE_N21: 
 403   2          case VMIX_TYPE_P21: ////////////////////////////andy-980604
 404   2            // ---------- LEFT Windows ----------
 405   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 406   2      
 407   2            if(iconid) {
 408   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 409   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 410   3            }
 411   2            else {
 412   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);      
 413   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 414   3              if (_attr[0] & 0x20)
 415   3              {
 416   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 417   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 418   4              }
 419   3              else
 420   3              {
 421   4                if (SYSMODE == 0) //Pinchi 20150422 add
 422   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 423   4              }
 424   3            #endif
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 8   

 425   3            }
 426   2      
 427   2            // ---------- RIGHT Windows ----------
 428   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 429   2            if(iconid) {
 430   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 431   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 432   3            }
 433   2            else {
 434   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 435   3            }
 436   2            break;
 437   2      
 438   2          case VMIX_TYPE_N22: 
 439   2          case VMIX_TYPE_P22: 
 440   2            // ---------- LEFT Windows ----------
 441   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 442   2      
 443   2            if(iconid) {
 444   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 445   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 446   3            }
 447   2            else {
 448   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
 449   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 450   3              if (_attr[0] & 0x20)
 451   3              {
 452   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 453   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 454   4              }
 455   3              else
 456   3              {
 457   4                if (SYSMODE == 0) //Pinchi 20150422 add
 458   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 459   4              }
 460   3            #endif
 461   3            }
 462   2      
 463   2            // ---------- RIGHT Windows ----------
 464   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 465   2            if(iconid) {
 466   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 467   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 468   3            }
 469   2            else {
 470   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 471   3            }
 472   2            break;
 473   2      
 474   2          case VMIX_TYPE_N31: // Trun Back
 475   2          case VMIX_TYPE_P31: // Trun Back
 476   2            // ---------- Trun Back Window Show "|" ----------
 477   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 478   2      
 479   2            if(iconid) {
 480   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 481   3              DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
 482   3            }
 483   2            else {
 484   3              PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
 485   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 486   3              if (_attr[0] & 0x20)
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 9   

 487   3              {
 488   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 489   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 490   4              }
 491   3              else
 492   3              {
 493   4                if (SYSMODE == 0) //Pinchi 20150422 add
 494   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 495   4              }
 496   3            #endif
 497   3            }
 498   2            break;
 499   2      
 500   2          case VMIX_TYPE_N32: 
 501   2          case VMIX_TYPE_P32: 
 502   2            break;
 503   2      
 504   2          case VMIX_TYPE_N33: // Trun LEFT
 505   2          case VMIX_TYPE_P33: // Trun LEFT
 506   2            // ---------- Show "<-" ----------
 507   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 508   2      
 509   2            if(iconid) {
 510   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 511   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 512   3            }
 513   2            else {
 514   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
 515   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 516   3              if (_attr[0] & 0x20)
 517   3              {
 518   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 519   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 520   4              }
 521   3              else
 522   3              {
 523   4                if (SYSMODE == 0) //Pinchi 20150422 add
 524   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 525   4              }
 526   3            #endif
 527   3            }
 528   2            break;
 529   2      
 530   2          case VMIX_TYPE_N34: // Trun RIGHT
 531   2          case VMIX_TYPE_P34: // Trun RIGHT
 532   2            // ---------- Show "->" ----------
 533   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 534   2      
 535   2            if(iconid) {
 536   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 537   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 538   3            }
 539   2            else {
 540   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 541   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 542   3              if (_attr[0] & 0x20)
 543   3              {
 544   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 545   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 546   4              }
 547   3              else
 548   3              {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 10  

 549   4                if (SYSMODE == 0) //Pinchi 20150422 add
 550   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 551   4              }
 552   3            #endif
 553   3            }
 554   2            break;
 555   2      
 556   2          case VMIX_TYPE_N41: 
 557   2          case VMIX_TYPE_P41: 
 558   2            break;
 559   2      
 560   2          default:  
 561   2            break;
 562   2        }
 563   1      }
 564          
 565          // ===========================================================================
 566          //
 567          // Show 'M'  on OSD when Video Mirror
 568          //
 569          #define MLCT_X0 23
 570          #define MLCT_X1 44
 571          #define MLCT_X2 65
 572          #define MIRROR  camstr[4]
 573          void PCT_ShowMirrorIcon(PU8 _attr)
 574          {
 575   1        PCT_PreSetForegroundColor(OSD_COL_YLW);
 576   1        switch(SYSMIXTYP) {
 577   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 578   2          // ------------------------------------ NTSC ----------------------------------------
 579   2          case VMIX_TYPE_N11: 
 580   2            // ---------- Window Show "M" ----------
 581   2            _ifBitSet(_attr[0],BIT0) {
 582   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 583   3            } else {
 584   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 585   3            }
 586   2            break;
 587   2      
 588   2          case VMIX_TYPE_N21: 
 589   2                  // ----------UP Window Show "M" ----------
 590   2            _ifBitSet(_attr[0],BIT0) {
 591   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 592   3            } else {
 593   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 594   3            }
 595   2                  // ----------DOWN Window Show "M" ----------
 596   2            _ifBitSet(_attr[1],BIT0) {
 597   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 598   3            } else {
 599   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 600   3            } 
 601   2            break;
 602   2      
 603   2          case VMIX_TYPE_N22: 
 604   2            // ---------- LEFT Window Show "M" ----------
 605   2            _ifBitSet(_attr[0],BIT0) {
 606   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 607   3            } else {
 608   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 609   3            }
 610   2      
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 11  

 611   2            // ---------- RIGHT Window Show "M" ----------
 612   2            _ifBitSet(_attr[1],BIT0) {
 613   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 614   3            } else {
 615   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 616   3            }
 617   2      
 618   2            break;
 619   2      
 620   2          case VMIX_TYPE_N31: // Trun Back
 621   2            // ---------- TOP Window Show "M" ----------
 622   2            _ifBitSet(_attr[0],BIT0) {
 623   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 624   3            } else {
 625   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 626   3            }
 627   2      
 628   2            // ---------- LEFT Window Show "M" ----------
 629   2            _ifBitSet(_attr[1],BIT0) {
 630   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 631   3            } else {
 632   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 633   3            }
 634   2      
 635   2            // ---------- RIGHT Window Show "M" ----------
 636   2            _ifBitSet(_attr[2],BIT0) {
 637   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 638   3            } else {
 639   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 640   3            }
 641   2            break;
 642   2      
 643   2          case VMIX_TYPE_N32: 
 644   2            break;
 645   2      
 646   2          case VMIX_TYPE_N33: // Trun LEFT
 647   2            // ---------- LEFT Window Show "M" ----------
 648   2            _ifBitSet(_attr[0],BIT0) {
 649   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 650   3            } else {
 651   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 652   3            }
 653   2      
 654   2            // ---------- RIGHT_TOP Window Show "M" ----------
 655   2            _ifBitSet(_attr[1],BIT0) {
 656   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 657   3            } else {
 658   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 659   3            }
 660   2      
 661   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 662   2            _ifBitSet(_attr[2],BIT0) {
 663   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 664   3            } else {
 665   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 666   3            }
 667   2            break;
 668   2      
 669   2          case VMIX_TYPE_N34: // Trun RIGHT
 670   2            // ---------- LEFT_TOP Window Show "M" ----------
 671   2            _ifBitSet(_attr[0],BIT0) {
 672   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 12  

 673   3            } else {
 674   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 675   3            }
 676   2      
 677   2            // ---------- RIGHT Window Show "M" ----------
 678   2            _ifBitSet(_attr[1],BIT0) {
 679   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 680   3            } else {
 681   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 682   3            }
 683   2      
 684   2            // ---------- LEFT_DOWN Window Show "M" ----------
 685   2            _ifBitSet(_attr[2],BIT0) {
 686   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 687   3            } else {
 688   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 689   3            }
 690   2            break;
 691   2      
 692   2          case VMIX_TYPE_N41: 
 693   2            // ---------- LEFT_TOP Window Show "M" ----------
 694   2            _ifBitSet(_attr[0],BIT0) {
 695   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 696   3            } else {
 697   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 698   3            }
 699   2      
 700   2            // ---------- RIGHT_TOP Window Show "M" ----------
 701   2            _ifBitSet(_attr[1],BIT0) {
 702   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 703   3            } else {
 704   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 705   3            }
 706   2      
 707   2            // ---------- LEFT_DOWN Window Show "M" ----------
 708   2            _ifBitSet(_attr[2],BIT0) {
 709   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 710   3            } else {
 711   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 712   3            }
 713   2      
 714   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 715   2            _ifBitSet(_attr[3],BIT0) {
 716   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 717   3            } else {
 718   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 719   3            }
 720   2            break;
 721   2      
 722   2          // ------------------------------------ PAL ----------------------------------------
 723   2          case VMIX_TYPE_P11: 
 724   2            // ---------- Window Show "M" ----------
 725   2            _ifBitSet(_attr[0],BIT0) {
 726   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 727   3            } else {
 728   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 729   3            }
 730   2            break;
 731   2      
 732   2          case VMIX_TYPE_P21: 
 733   2                   // ----------UP Window Show "M" ----------
 734   2            _ifBitSet(_attr[0],BIT0) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 13  

 735   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 736   3            } else {
 737   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 738   3            }
 739   2                  // ----------DOWN Window Show "M" ----------
 740   2            _ifBitSet(_attr[1],BIT0) {
 741   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 742   3            } else {
 743   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 744   3            }
 745   2            break;
 746   2      
 747   2          case VMIX_TYPE_P22: 
 748   2            // ---------- LEFT Window Show "M" ----------
 749   2            _ifBitSet(_attr[0],BIT0) {
 750   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 751   3            } else {
 752   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 753   3            }
 754   2      
 755   2            // ---------- RIGHT Window Show "M" ----------
 756   2            _ifBitSet(_attr[1],BIT0) {
 757   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 758   3            } else {
 759   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 760   3            }
 761   2      
 762   2            break;
 763   2      
 764   2          case VMIX_TYPE_P31: // Trun Back
 765   2            // ---------- TOP Window Show "M" ----------
 766   2            _ifBitSet(_attr[0],BIT0) {
 767   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 768   3            } else {
 769   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 770   3            }
 771   2      
 772   2            // ---------- LEFT Window Show "M" ----------
 773   2            _ifBitSet(_attr[1],BIT0) {
 774   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 775   3            } else {
 776   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 777   3            }
 778   2      
 779   2            // ---------- RIGHT Window Show "M" ----------
 780   2            _ifBitSet(_attr[2],BIT0) {
 781   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 782   3            } else {
 783   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 784   3            }
 785   2            break;
 786   2      
 787   2          case VMIX_TYPE_P32: 
 788   2            break;
 789   2      
 790   2          case VMIX_TYPE_P33: // Trun LEFT
 791   2            // ---------- LEFT Window Show "M" ----------
 792   2            _ifBitSet(_attr[0],BIT0) {
 793   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 794   3            } else {
 795   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 796   3            }
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 14  

 797   2      
 798   2            // ---------- RIGHT_TOP Window Show "M" ----------
 799   2            _ifBitSet(_attr[1],BIT0) {
 800   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 801   3            } else {
 802   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 803   3            }
 804   2      
 805   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 806   2            _ifBitSet(_attr[2],BIT0) {
 807   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 808   3            } else {
 809   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 810   3            }
 811   2            break;
 812   2      
 813   2          case VMIX_TYPE_P34: // Trun RIGHT
 814   2            // ---------- LEFT_TOP Window Show "M" ----------
 815   2            _ifBitSet(_attr[0],BIT0) {
 816   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 817   3            } else {
 818   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 819   3            }
 820   2      
 821   2            // ---------- RIGHT Window Show "M" ----------
 822   2            _ifBitSet(_attr[1],BIT0) {
 823   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 824   3            } else {
 825   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 826   3            }
 827   2      
 828   2            // ---------- LEFT_DOWN Window Show "M" ----------
 829   2            _ifBitSet(_attr[2],BIT0) {
 830   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 831   3            } else {
 832   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 833   3            }
 834   2            break;
 835   2      
 836   2          case VMIX_TYPE_P41: 
 837   2            // ---------- LEFT_TOP Window Show "M" ----------
 838   2            _ifBitSet(_attr[0],BIT0) {
 839   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 840   3            } else {
 841   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 842   3            }
 843   2      
 844   2            // ---------- RIGHT_TOP Window Show "M" ----------
 845   2            _ifBitSet(_attr[1],BIT0) {
 846   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 847   3            } else {
 848   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 849   3            }
 850   2      
 851   2            // ---------- LEFT_DOWN Window Show "M" ----------
 852   2            _ifBitSet(_attr[2],BIT0) {
 853   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 854   3            } else {
 855   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 856   3            }
 857   2      
 858   2            // ---------- RIGHT_DOWN Window Show "M" ----------
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 15  

 859   2            _ifBitSet(_attr[3],BIT0) {
 860   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 861   3            } else {
 862   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 863   3            }
 864   2            break;
 865   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 16  

                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 17  

                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 18  

                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 19  

                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1154   2      
1155   2          default:
1156   2            break;
1157   2        }
1158   1      }
1159          
1160          #define SLCT_X0 31
1161          #define SLCT_X1 52
1162          #define SLCT_X2 73
1163          //+ code unsigned char SPEAKICON[] = {0x01,'\0'};
1164          code unsigned char SPEAKICON[] = {0x0E,'\0'};
1165          // ===========================================================================
1166          //
1167          // Show Speak Icon on OSD 
1168          //
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 20  

1169          void PCT_ShowSpeakIcon(PU8 _attr)
1170          {
1171   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
1172   1        switch(SYSMIXTYP) {
1173   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
1174   2          // ------------------------------------ NTSC ----------------------------------------
1175   2          case VMIX_TYPE_N11: 
1176   2            _ifBitSet(_attr[0],BIT4) {
1177   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1178   3            } else {
1179   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1180   3            }
1181   2            break;
1182   2      
1183   2          case VMIX_TYPE_N21:      //andy 980630
1184   2            _ifBitSet(_attr[0],BIT4) {
1185   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1186   3            } else {
1187   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1188   3            }
1189   2            _ifBitSet(_attr[0],BIT4) {
1190   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1191   3            } else {
1192   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
1193   3            }
1194   2            break;
1195   2      
1196   2          case VMIX_TYPE_N22: 
1197   2            _ifBitSet(_attr[0],BIT4) {
1198   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1199   3            } else {
1200   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1201   3            }
1202   2            _ifBitSet(_attr[1],BIT4) {
1203   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1204   3            } else {
1205   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1206   3            }
1207   2            break;
1208   2      
1209   2          case VMIX_TYPE_N31: // Trun Back
1210   2            _ifBitSet(_attr[0],BIT4) {
1211   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1212   3            } else {
1213   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1214   3            }
1215   2            _ifBitSet(_attr[1],BIT4) {
1216   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
1217   3            } else {
1218   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
1219   3            }
1220   2            _ifBitSet(_attr[2],BIT4) {
1221   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
1222   3            } else {
1223   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
1224   3            }
1225   2            break;
1226   2      
1227   2          case VMIX_TYPE_N32: 
1228   2            break;
1229   2      
1230   2          case VMIX_TYPE_N33: // Trun LEFT
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 21  

1231   2            _ifBitSet(_attr[0],BIT4) {
1232   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1233   3            } else {
1234   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1235   3            }
1236   2            _ifBitSet(_attr[1],BIT4) {
1237   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1238   3            } else {
1239   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1240   3            }
1241   2            _ifBitSet(_attr[2],BIT4) {
1242   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
1243   3            } else {
1244   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
1245   3            }
1246   2            break;
1247   2      
1248   2          case VMIX_TYPE_N34: // Trun RIGHT
1249   2            _ifBitSet(_attr[0],BIT4) {
1250   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1251   3            } else {
1252   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1253   3            }
1254   2            _ifBitSet(_attr[1],BIT4) {
1255   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1256   3            } else {
1257   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1258   3            }
1259   2            _ifBitSet(_attr[2],BIT4) {
1260   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
1261   3            } else {
1262   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
1263   3            }
1264   2            break;
1265   2      
1266   2          case VMIX_TYPE_N41: 
1267   2            _ifBitSet(_attr[0],BIT4) {
1268   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1269   3            } else {
1270   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1271   3            }
1272   2            _ifBitSet(_attr[1],BIT4) {
1273   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1274   3            } else {
1275   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1276   3            }
1277   2            _ifBitSet(_attr[2],BIT4) {
1278   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
1279   3            } else {
1280   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
1281   3            }
1282   2            _ifBitSet(_attr[3],BIT4) {
1283   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
1284   3            } else {
1285   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
1286   3            }
1287   2            break;
1288   2      
1289   2          // ------------------------------------ PAL ----------------------------------------
1290   2          case VMIX_TYPE_P11: 
1291   2            _ifBitSet(_attr[0],BIT4) {
1292   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 22  

1293   3            } else {
1294   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1295   3            }
1296   2            break;
1297   2      
1298   2          case VMIX_TYPE_P21: 
1299   2            break;
1300   2      
1301   2          case VMIX_TYPE_P22: 
1302   2            _ifBitSet(_attr[0],BIT4) {
1303   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1304   3            } else {
1305   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1306   3            }
1307   2            _ifBitSet(_attr[1],BIT4) {
1308   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1309   3            } else {
1310   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1311   3            }
1312   2            break;
1313   2      
1314   2          case VMIX_TYPE_P31: // Trun Back
1315   2            _ifBitSet(_attr[0],BIT4) {
1316   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1317   3            } else {
1318   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1319   3            }
1320   2            _ifBitSet(_attr[1],BIT4) {
1321   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
1322   3            } else {
1323   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
1324   3            }
1325   2            _ifBitSet(_attr[2],BIT4) {
1326   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
1327   3            } else {
1328   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
1329   3            }
1330   2            break;
1331   2      
1332   2          case VMIX_TYPE_P32: 
1333   2            break;
1334   2      
1335   2          case VMIX_TYPE_P33: // Trun LEFT
1336   2            _ifBitSet(_attr[0],BIT4) {
1337   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1338   3            } else {
1339   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1340   3            }
1341   2            _ifBitSet(_attr[1],BIT4) {
1342   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1343   3            } else {
1344   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1345   3            }
1346   2            _ifBitSet(_attr[2],BIT4) {
1347   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
1348   3            } else {
1349   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
1350   3            }
1351   2            break;
1352   2      
1353   2          case VMIX_TYPE_P34: // Trun RIGHT
1354   2            _ifBitSet(_attr[0],BIT4) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 23  

1355   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1356   3            } else {
1357   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1358   3            }
1359   2            _ifBitSet(_attr[1],BIT4) {
1360   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1361   3            } else {
1362   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1363   3            }
1364   2            _ifBitSet(_attr[2],BIT4) {
1365   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
1366   3            } else {
1367   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
1368   3            }
1369   2            break;
1370   2      
1371   2          case VMIX_TYPE_P41: 
1372   2            _ifBitSet(_attr[0],BIT4) {
1373   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1374   3            } else {
1375   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1376   3            }
1377   2            _ifBitSet(_attr[1],BIT4) {
1378   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1379   3            } else {
1380   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1381   3            }
1382   2            _ifBitSet(_attr[2],BIT4) {
1383   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
1384   3            } else {
1385   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
1386   3            }
1387   2            _ifBitSet(_attr[3],BIT4) {
1388   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
1389   3            } else {
1390   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
1391   3            }
1392   2            break;
1393   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 24  

                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 25  

                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 26  

                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 27  

                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1614   2      
1615   2          default:
1616   2            break;
1617   2        }
1618   1      }
1619          
1620          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //Pinchi 20150422 modify to H center
              #define VLS_LCT_XM0 (LOCATE_XM0-4)-8
              #define VLS_LCT_XM1 (LOCATE_XM1-4)-8
              #define VLS_LCT_XM2 (LOCATE_XM2-4)-8
              #else
1626          #define VLS_LCT_XM0 LOCATE_XM0-4
1627          #define VLS_LCT_XM1 LOCATE_XM1-4
1628          #define VLS_LCT_XM2 LOCATE_XM2-4
1629          #endif
1630          
1631          #define LOCATE_YM0  7
1632          #define LOCATE_YM1  13
1633          #define LOCATE_YM2  21
1634          
1635          #define LOCATE_PYM0 8
1636          #define LOCATE_PYM1 16
1637          #define LOCATE_PYM2 25
1638          
1639          //H #define msgVLOSS "VLoss"
1640          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              code unsigned char msgVLOSS[]= {0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1c, 0x1d, 0x1e,'\0
             -'};
              
              #define msgCLEAR_W  15  //Pinchi 20150331 modify for lenghth of NO VIDEO SIGNAL
              #else
1645          code unsigned char msgVLOSS[]= {0x0F, 0x10, 0x11, 0x12, 0x12, '\0'};  // VLoss define for HiSharp
1646          //code unsigned char msgVLOSS[]= {'\0'};  // VLoss define for HiSharp   //william-v3.5-971001
1647          
1648          #define msgCLEAR_W  5
1649          #endif
1650          
1651          
1652          // ===========================================================================
1653          //
1654          // Show VLoss on OSD when Video Signal Loss
1655          //
1656          void PCT_ShowVLoss(void)
1657          {
1658   1      #if 0  //Pinchi 20150325 disable
                data U8 tmpsta;
                tmpsta = SYSVDOSGL^MSGVDOSGL;
              #endif
1662   1      
1663   1        switch(SYSMIXTYP) {
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 28  

1664   2          // ------------------------------ NTSC ----------------------------
1665   2          case VMIX_TYPE_N11: 
1666   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1667   2              DrawString(VLS_LCT_XM1, LOCATE_YM1, msgVLOSS) ;
1668   2            else
1669   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM1, msgCLEAR_W);
1670   2            break;
1671   2      
1672   2          case VMIX_TYPE_N21: 
1673   2            break;
1674   2      
1675   2          case VMIX_TYPE_N22: 
1676   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1677   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
1678   2            else
1679   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
1680   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1681   2              DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
1682   2            else
1683   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
1684   2            break;
1685   2      
1686   2          case VMIX_TYPE_N31: // Trun Back
1687   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1688   2              DrawString(VLS_LCT_XM1, LOCATE_YM0, msgVLOSS);
1689   2            else
1690   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM0, msgCLEAR_W);
1691   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1692   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
1693   2            else
1694   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
1695   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1696   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
1697   2            else
1698   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
1699   2            break;
1700   2      
1701   2          case VMIX_TYPE_N32: 
1702   2            break;
1703   2      
1704   2          case VMIX_TYPE_N33: // Trun LEFT
1705   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1706   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
1707   2            else
1708   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
1709   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1710   2              DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
1711   2            else
1712   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
1713   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1714   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
1715   2            else
1716   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
1717   2            break;
1718   2      
1719   2          case VMIX_TYPE_N34: // Trun RIGHT
1720   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1721   2              DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
1722   2            else
1723   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
1724   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1725   2              DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 29  

1726   2            else
1727   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
1728   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1729   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
1730   2            else
1731   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
1732   2            break;
1733   2      
1734   2          case VMIX_TYPE_N41: 
1735   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1736   2              DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
1737   2            else
1738   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
1739   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1740   2              DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
1741   2            else
1742   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
1743   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1744   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
1745   2            else
1746   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
1747   2            if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
1748   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
1749   2            else
1750   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
1751   2            break;
1752   2      
1753   2          // ------------------------------ PAL ----------------------------
1754   2          case VMIX_TYPE_P11: 
1755   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1756   2              DrawString(VLS_LCT_XM1, LOCATE_PYM1, msgVLOSS) ;
1757   2            else
1758   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM1, msgCLEAR_W);
1759   2            break;
1760   2      
1761   2          case VMIX_TYPE_P21: 
1762   2            break;
1763   2      
1764   2          case VMIX_TYPE_P22: 
1765   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1766   2              DrawString(VLS_LCT_XM0, LOCATE_PYM1, msgVLOSS);
1767   2            else
1768   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
1769   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1770   2              DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
1771   2            else
1772   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
1773   2            break;
1774   2      
1775   2          case VMIX_TYPE_P31: // Trun Back
1776   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1777   2              DrawString(VLS_LCT_XM1, LOCATE_PYM0, msgVLOSS);
1778   2            else
1779   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM0, msgCLEAR_W);
1780   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1781   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
1782   2            else
1783   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
1784   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1785   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
1786   2            else
1787   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 30  

1788   2            break;
1789   2      
1790   2          case VMIX_TYPE_P32: 
1791   2            break;
1792   2      
1793   2          case VMIX_TYPE_P33: // Trun LEFT
1794   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1795   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
1796   2            else
1797   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
1798   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1799   2              DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
1800   2            else
1801   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
1802   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1803   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
1804   2            else
1805   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
1806   2            break;
1807   2      
1808   2          case VMIX_TYPE_P34: // Trun RIGHT
1809   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1810   2              DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
1811   2            else
1812   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
1813   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1814   2              DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
1815   2            else
1816   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
1817   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1818   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
1819   2            else
1820   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
1821   2            break;
1822   2      
1823   2          case VMIX_TYPE_P41: 
1824   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
1825   2              DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
1826   2            else
1827   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
1828   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
1829   2              DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
1830   2            else
1831   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
1832   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
1833   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
1834   2            else
1835   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
1836   2            if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
1837   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
1838   2            else
1839   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
1840   2            break;
1841   2      
1842   2          default:
1843   2            break;
1844   2        }
1845   1      }
1846          
1847          // ===========================================================================
1848          //
1849          // Show Control Mode OSD 
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 31  

1850          //
1851          void PCT_ShowModeIcon(void)
1852          {
1853   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
1854   1        // Show System Mode 0:S or 1:J
1855   1        switch(SYSMODE)
1856   1        {
1857   2          case JMODE:
1858   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
1859   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
1860   2            DrawString(1, 0, JMODEOSD);
1861   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
1862   2            break;  
1863   2      
1864   2          case SEQMODE:
1865   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
1866   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
1867   2            DrawString(1, 0, SEQMODEOSD);
1868   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
1869   2            break;
1870   2      
1871   2          case SMODE:
1872   2            break;
1873   2        }
1874   1      }
1875          
1876          // ===========================================================================
1877          //
1878          // Show Other OSD not Recviver Command in 50msec
1879          //
1880          void PCT_OSDActionForHS(void)
1881          {
1882   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
1883   1      #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
1884   1        _ifBitSet(SYSWINATTR[0],BIT1)
1885   1      #else
                ifBitSet(SYSWINATTR[0],BIT1)
              #endif
1888   1        {
1889   2      //    PCT_OSD_ActionPthX(SYSWINATTR);
1890   2          PCT_ShowMirrorIcon(SYSWINATTR);
1891   2          PCT_ShowSpeakIcon(SYSWINATTR);
1892   2          PCT_ShowIndicateIcon(SYSWINATTR);
1893   2        }
1894   1        PCT_EnfalshVLoss();//<960820-william>
1895   1        PCT_EnShowOSDPage(WRPHX_PAGE0);
1896   1      }
1897          
1898          
1899          // ===========================================================================
1900          // END of File 
1901          // ==========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5544    ----
   CONSTANT SIZE    =     37    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1      12
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.50a   OSDACTION                                                            09/20/2017 10:37:46 PAGE 32  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
