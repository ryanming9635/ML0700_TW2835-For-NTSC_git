C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE OSDACTION
OBJECT MODULE PLACED IN .\OBJ\OSDAction.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE OSDAction.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ
                    -\OSDAction.lst) TABS(2) OBJECT(.\OBJ\OSDAction.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDAction.C
  10          //
  11          //  Purpose: Implementation of OSD Action.
  12          //
  13          //  Version: 0.01                                   2006/12/25 09:43¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/12/25 09:43¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "TW28xx_Video.h"
  35          #include "Timer.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "OSDAction.h"
  39          #include "OSDCtrl.h"
  40          #include "OSD_Graph.h"
  41          #include "Main.h"  //Pinchi 20150323 add
  42          
  43          
  44          //  ------------------------------------
  45          //      Macro Definitions
  46          //  ------------------------------------ 
  47          #define GRAPH_FONT
  48          #ifndef GRAPH_FONT
                #define DrawString(a, b, c)   PCT_ShowOSDString(PTH_X, a, b, c)
              #else
  51            #define DrawString(a, b, c)   PCT_ShowGraphString(PTH_X, a, b, c)
  52          #endif
  53          
  54          #define LOCATE_XM0  20
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 2   

  55          #define LOCATE_XM1  41
  56          #define LOCATE_XM2  62
  57          
  58          #define LOCATE_YT0  0
  59          #define LOCATE_YT1  15
  60          #define LOCATE_YT2  18
  61          
  62          code unsigned char camstr[7][3]={ {0x05,'\0'},//"A",
  63                            {0x06,'\0'},//"B",
  64                            {0x07,'\0'},//"C",
  65                            {0x08,'\0'},//"R",
  66                            {0x09,'\0'},//"M",
  67                            {0x0A,'\0'},//"J",
  68                          #if 1  //Pinchi 20150513 add new 'S' for SEQ mode
  69                            {0x1F,'\0'},//"S",
  70                          #else
                                {0x12,'\0'},//"S",
                              #endif
  73          };
  74          
  75          //  ------------------------------------
  76          //      Type Definitions
  77          //  ------------------------------------
  78          
  79          
  80          //  ------------------------------------
  81          //      Variables Definitions
  82          //  ------------------------------------
  83            U8 bdata osdflage=0;
  84            sbit OSDPAGE2 = osdflage^0;
  85            sbit OSDPAGE3 = osdflage^1;
  86            sbit OSDPAGE4 = osdflage^2;
  87            sbit OSDPAGE5 = osdflage^3;
  88            U8 VlossCount;
  89            //bit VlossState;
  90          
  91            extern bit VlossFlag;
  92          
  93          //  ------------------------------------
  94          //      Function Prototypes
  95          //  ------------------------------------
  96          
  97          
  98          // ===========================================================================
  99          //                      Parallel function description
 100          // ===========================================================================
 101          //
 102          void PCT_InitialOSD(void)
 103          {
 104   1        data U8 page;
 105   1        //... OSD color index
 106   1        PCT_InitOSDColor();
 107   1        PCT_ClearGraphAttr();
 108   1      
 109   1        PCT_PreSetForegroundColor(OSD_COL_100WHT);
 110   1        PCT_PreSetBackgroundColor(OSD_COL_BLU);
 111   1        for(page=0; page<6; page++){
 112   2          PCT_SetOSDDrawPage(page);
 113   2          PCT_FullColorOnOSD(0,0,90,38);      //... max line num is 310 line for OSD
 114   2        }
 115   1        PCT_EnShowOSDPage(WRPHX_PAGE1);
 116   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 3   

 117   1        PCT_SetOSDDrawPage(WRPHY_PAGE0);
 118   1        PCT_FullColorOnOSD(0,0,90,38);        // ??
 119   1      
 120   1        SYSMODE=0;
 121   1      }
 122          
 123          // ===========================================================================
 124          //
 125          // PTH_X OSD Action
 126          //
 127          #define OSDBIT  BIT1
 128          void PCT_OSD_ActionPthX(PU8 _attr)
 129          {
 130   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
 131   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 132   1        switch(SYSMIXTYP) {
 133   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 134   2          // ------------------------------------ NTSC ----------------------------------------
 135   2          case VMIX_TYPE_N11:
 136   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 137   2            break;
 138   2      
 139   2          case VMIX_TYPE_N21:
 140   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
 141   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
 142   2            break;
 143   2      
 144   2          case VMIX_TYPE_N22:
 145   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 146   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 147   2            break;
 148   2      
 149   2          case VMIX_TYPE_N31:
 150   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 151   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
 152   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 153   2            break;
 154   2      
 155   2          case VMIX_TYPE_N32:
 156   2            break;
 157   2      
 158   2          case VMIX_TYPE_N33: // Turn LEFT
 159   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 160   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 161   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 162   2            break;
 163   2      
 164   2          case VMIX_TYPE_N34: // Turn RIGHT
 165   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 166   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 167   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 168   2            break;
 169   2      
 170   2          case VMIX_TYPE_N41: 
 171   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 172   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 173   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 174   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
 175   2            break;
 176   2      
 177   2          // ------------------------------------ PAL ----------------------------------------
 178   2          case VMIX_TYPE_P11: 
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 4   

 179   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 180   2            break;
 181   2      
 182   2          case VMIX_TYPE_P21: 
 183   2                  _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 9806
             -29
 184   2                  _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 9806
             -29
 185   2            break;
 186   2      
 187   2          case VMIX_TYPE_P22: 
 188   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 189   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 190   2            break;
 191   2      
 192   2          case VMIX_TYPE_P31: 
 193   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 194   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
 195   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 196   2            break;
 197   2      
 198   2          case VMIX_TYPE_P32: 
 199   2            break;
 200   2      
 201   2          case VMIX_TYPE_P33: // Turn LEFT
 202   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 203   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 204   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 205   2            break;
 206   2      
 207   2          case VMIX_TYPE_P34: // Turn RIGHT
 208   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 209   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 210   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 211   2            break;
 212   2      
 213   2          case VMIX_TYPE_P41: 
 214   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 215   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 216   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 217   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
 218   2            break;
 219   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_N21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_N31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 5   

                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_P21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_P31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 6   

                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
                    break;
                #endif
 306   2      
 307   2          default:
 308   2            break;
 309   2        }
 310   1      }
 311          
 312          // ===========================================================================
 313          //
 314          // Check Video Loss
 315          //
 316          void PCT_EnfalshVLoss(void)
 317          { 
 318   1        SYSVDOSGL |= BIT7;
 319   1      }
 320          
 321          // ===========================================================================
 322          //
 323          // Get Video Signal Status
 324          //
 325          void PCT_GetVideoSignalStatus(void)
 326          { 
 327   1        MSGVDOSGL = ReadSignalSta(0x01, 0x78)&0x0F;
 328   1      
 329   1        if(SYSVDOSGL == MSGVDOSGL) return;        // Check Video Loss
 330   1        // --------------- Processing Show VLoss ---------------
 331   1           //William-V3.10-20100206>>>>>>>>>>>>>>>>NTSC PAL Detect when Video Loss
 332   1        VlossFlag=1;
 333   1        TW28_WriteByte(0x00,0x31,TW28_ReadByte(0x00,0x31)&0x7f);
 334   1        //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 335   1      #ifdef AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //  if (VlossFlag == 0)
                {
              //    VlossFlag=1;
                PCT_ShowVLoss();
                }
              #else
 342   1        #ifdef HS//don't dispaly vloss OSD
 343   1        #else
                PCT_PreSetForegroundColor(OSD_COL_RED255|OSD_BLINK);
                PCT_PreSetGraphAttr(OSD_BLINK);
                PCT_ShowVLoss();
                PCT_ClearGraphAttr();
                #endif
 349   1      #endif
 350   1        // -----------------------------------------------------
 351   1        SYSVDOSGL = MSGVDOSGL;
 352   1      }
 353          
 354          // ===========================================================================
 355          //
 356          // Show '<-' on OSD when Trun LEFT
 357          // Show '->' on OSD when Trun RIGHT
 358          //
 359          #define ILCT_X0 28
 360          #define ILCT_X1 49
 361          #define ILCT_X2 70
 362          #define ICONBIT 0x0C
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 7   

 363          #define ICONSFT 2
 364          
 365          code unsigned char indicate_icon[] = {
 366            0x20,'\0',  //+ 0x20,'\0',
 367            0x0B,'\0',  //+ 0x02,'\0',
 368            0x0C,'\0',  //+ 0x03,'\0',
 369            0x0D,'\0',  //+ 0x04,'\0',
 370          };
 371          
 372          void PCT_ShowIndicateIcon(PU8 _attr)
 373          {
 374   1        data U8 iconid;
 375   1      //  printf("Command Shell for HiSharp Set S or J Mode");
 376   1        
 377   1        PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
 378   1        switch(SYSMIXTYP) {
 379   2          // ------------------------------------ NTSC & PAL ----------------------------------------
 380   2          case VMIX_TYPE_N11: 
 381   2          case VMIX_TYPE_P11: 
 382   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 383   2      
 384   2            if(iconid) {
 385   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 386   3              DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
 387   3            } 
 388   2            else {
 389   3              PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
 390   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 391   3              if (_attr[0] & 0x20)
 392   3              {
 393   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 394   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 395   4              }
 396   3              else
 397   3              {
 398   4                if (SYSMODE == 0) //Pinchi 20150422 add
 399   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 400   4              }
 401   3            #endif
 402   3            }
 403   2            break;
 404   2      
 405   2          case VMIX_TYPE_N21: 
 406   2          case VMIX_TYPE_P21: ////////////////////////////andy-980604
 407   2            // ---------- LEFT Windows ----------
 408   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 409   2      
 410   2            if(iconid) {
 411   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 412   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 413   3            }
 414   2            else {
 415   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);      
 416   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 417   3              if (_attr[0] & 0x20)
 418   3              {
 419   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 420   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 421   4              }
 422   3              else
 423   3              {
 424   4                if (SYSMODE == 0) //Pinchi 20150422 add
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 8   

 425   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 426   4              }
 427   3            #endif
 428   3            }
 429   2      
 430   2            // ---------- RIGHT Windows ----------
 431   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 432   2            if(iconid) {
 433   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 434   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 435   3            }
 436   2            else {
 437   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 438   3            }
 439   2            break;
 440   2      
 441   2          case VMIX_TYPE_N22: 
 442   2          case VMIX_TYPE_P22: 
 443   2            // ---------- LEFT Windows ----------
 444   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 445   2      
 446   2            if(iconid) {
 447   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 448   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 449   3            }
 450   2            else {
 451   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
 452   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 453   3              if (_attr[0] & 0x20)
 454   3              {
 455   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 456   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 457   4              }
 458   3              else
 459   3              {
 460   4                if (SYSMODE == 0) //Pinchi 20150422 add
 461   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 462   4              }
 463   3            #endif
 464   3            }
 465   2      
 466   2            // ---------- RIGHT Windows ----------
 467   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 468   2            if(iconid) {
 469   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 470   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 471   3            }
 472   2            else {
 473   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 474   3            }
 475   2            break;
 476   2      
 477   2          case VMIX_TYPE_N31: // Trun Back
 478   2          case VMIX_TYPE_P31: // Trun Back
 479   2            // ---------- Trun Back Window Show "|" ----------
 480   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 481   2      
 482   2            if(iconid) {
 483   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 484   3              DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
 485   3            }
 486   2            else {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 9   

 487   3              PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
 488   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 489   3              if (_attr[0] & 0x20)
 490   3              {
 491   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 492   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 493   4              }
 494   3              else
 495   3              {
 496   4                if (SYSMODE == 0) //Pinchi 20150422 add
 497   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 498   4              }
 499   3            #endif
 500   3            }
 501   2            break;
 502   2      
 503   2          case VMIX_TYPE_N32: 
 504   2          case VMIX_TYPE_P32: 
 505   2            break;
 506   2      
 507   2          case VMIX_TYPE_N33: // Trun LEFT
 508   2          case VMIX_TYPE_P33: // Trun LEFT
 509   2            // ---------- Show "<-" ----------
 510   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 511   2      
 512   2            if(iconid) {
 513   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 514   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 515   3            }
 516   2            else {
 517   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
 518   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 519   3              if (_attr[0] & 0x20)
 520   3              {
 521   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 522   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 523   4              }
 524   3              else
 525   3              {
 526   4                if (SYSMODE == 0) //Pinchi 20150422 add
 527   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 528   4              }
 529   3            #endif
 530   3            }
 531   2            break;
 532   2      
 533   2          case VMIX_TYPE_N34: // Trun RIGHT
 534   2          case VMIX_TYPE_P34: // Trun RIGHT
 535   2            // ---------- Show "->" ----------
 536   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 537   2      
 538   2            if(iconid) {
 539   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 540   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 541   3            }
 542   2            else {
 543   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 544   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 545   3              if (_attr[0] & 0x20)
 546   3              {
 547   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 548   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 10  

 549   4              }
 550   3              else
 551   3              {
 552   4                if (SYSMODE == 0) //Pinchi 20150422 add
 553   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 554   4              }
 555   3            #endif
 556   3            }
 557   2            break;
 558   2      
 559   2          case VMIX_TYPE_N41: 
 560   2          case VMIX_TYPE_P41: 
 561   2            break;
 562   2      
 563   2          default:  
 564   2            break;
 565   2        }
 566   1      }
 567          
 568          // ===========================================================================
 569          //
 570          // Show 'M'  on OSD when Video Mirror
 571          //
 572          #define MLCT_X0 23
 573          #define MLCT_X1 44
 574          #define MLCT_X2 65
 575          #define MIRROR  camstr[4]
 576          void PCT_ShowMirrorIcon(PU8 _attr)
 577          {
 578   1        PCT_PreSetForegroundColor(OSD_COL_YLW);
 579   1        switch(SYSMIXTYP) {
 580   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 581   2          // ------------------------------------ NTSC ----------------------------------------
 582   2          case VMIX_TYPE_N11: 
 583   2            // ---------- Window Show "M" ----------
 584   2            _ifBitSet(_attr[0],BIT0) {
 585   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 586   3            } else {
 587   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 588   3            }
 589   2            break;
 590   2      
 591   2          case VMIX_TYPE_N21: 
 592   2                  // ----------UP Window Show "M" ----------
 593   2            _ifBitSet(_attr[0],BIT0) {
 594   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 595   3            } else {
 596   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 597   3            }
 598   2                  // ----------DOWN Window Show "M" ----------
 599   2            _ifBitSet(_attr[1],BIT0) {
 600   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 601   3            } else {
 602   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 603   3            } 
 604   2            break;
 605   2      
 606   2          case VMIX_TYPE_N22: 
 607   2            // ---------- LEFT Window Show "M" ----------
 608   2            _ifBitSet(_attr[0],BIT0) {
 609   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 610   3            } else {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 11  

 611   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 612   3            }
 613   2      
 614   2            // ---------- RIGHT Window Show "M" ----------
 615   2            _ifBitSet(_attr[1],BIT0) {
 616   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 617   3            } else {
 618   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 619   3            }
 620   2      
 621   2            break;
 622   2      
 623   2          case VMIX_TYPE_N31: // Trun Back
 624   2            // ---------- TOP Window Show "M" ----------
 625   2            _ifBitSet(_attr[0],BIT0) {
 626   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 627   3            } else {
 628   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 629   3            }
 630   2      
 631   2            // ---------- LEFT Window Show "M" ----------
 632   2            _ifBitSet(_attr[1],BIT0) {
 633   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 634   3            } else {
 635   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 636   3            }
 637   2      
 638   2            // ---------- RIGHT Window Show "M" ----------
 639   2            _ifBitSet(_attr[2],BIT0) {
 640   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 641   3            } else {
 642   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 643   3            }
 644   2            break;
 645   2      
 646   2          case VMIX_TYPE_N32: 
 647   2            break;
 648   2      
 649   2          case VMIX_TYPE_N33: // Trun LEFT
 650   2            // ---------- LEFT Window Show "M" ----------
 651   2            _ifBitSet(_attr[0],BIT0) {
 652   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 653   3            } else {
 654   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 655   3            }
 656   2      
 657   2            // ---------- RIGHT_TOP Window Show "M" ----------
 658   2            _ifBitSet(_attr[1],BIT0) {
 659   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 660   3            } else {
 661   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 662   3            }
 663   2      
 664   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 665   2            _ifBitSet(_attr[2],BIT0) {
 666   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 667   3            } else {
 668   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 669   3            }
 670   2            break;
 671   2      
 672   2          case VMIX_TYPE_N34: // Trun RIGHT
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 12  

 673   2            // ---------- LEFT_TOP Window Show "M" ----------
 674   2            _ifBitSet(_attr[0],BIT0) {
 675   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 676   3            } else {
 677   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 678   3            }
 679   2      
 680   2            // ---------- RIGHT Window Show "M" ----------
 681   2            _ifBitSet(_attr[1],BIT0) {
 682   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 683   3            } else {
 684   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 685   3            }
 686   2      
 687   2            // ---------- LEFT_DOWN Window Show "M" ----------
 688   2            _ifBitSet(_attr[2],BIT0) {
 689   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 690   3            } else {
 691   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 692   3            }
 693   2            break;
 694   2      
 695   2          case VMIX_TYPE_N41: 
 696   2            // ---------- LEFT_TOP Window Show "M" ----------
 697   2            _ifBitSet(_attr[0],BIT0) {
 698   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 699   3            } else {
 700   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 701   3            }
 702   2      
 703   2            // ---------- RIGHT_TOP Window Show "M" ----------
 704   2            _ifBitSet(_attr[1],BIT0) {
 705   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 706   3            } else {
 707   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 708   3            }
 709   2      
 710   2            // ---------- LEFT_DOWN Window Show "M" ----------
 711   2            _ifBitSet(_attr[2],BIT0) {
 712   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 713   3            } else {
 714   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 715   3            }
 716   2      
 717   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 718   2            _ifBitSet(_attr[3],BIT0) {
 719   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 720   3            } else {
 721   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 722   3            }
 723   2            break;
 724   2      
 725   2          // ------------------------------------ PAL ----------------------------------------
 726   2          case VMIX_TYPE_P11: 
 727   2            // ---------- Window Show "M" ----------
 728   2            _ifBitSet(_attr[0],BIT0) {
 729   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 730   3            } else {
 731   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 732   3            }
 733   2            break;
 734   2      
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 13  

 735   2          case VMIX_TYPE_P21: 
 736   2                   // ----------UP Window Show "M" ----------
 737   2            _ifBitSet(_attr[0],BIT0) {
 738   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 739   3            } else {
 740   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 741   3            }
 742   2                  // ----------DOWN Window Show "M" ----------
 743   2            _ifBitSet(_attr[1],BIT0) {
 744   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 745   3            } else {
 746   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 747   3            }
 748   2            break;
 749   2      
 750   2          case VMIX_TYPE_P22: 
 751   2            // ---------- LEFT Window Show "M" ----------
 752   2            _ifBitSet(_attr[0],BIT0) {
 753   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 754   3            } else {
 755   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 756   3            }
 757   2      
 758   2            // ---------- RIGHT Window Show "M" ----------
 759   2            _ifBitSet(_attr[1],BIT0) {
 760   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 761   3            } else {
 762   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 763   3            }
 764   2      
 765   2            break;
 766   2      
 767   2          case VMIX_TYPE_P31: // Trun Back
 768   2            // ---------- TOP Window Show "M" ----------
 769   2            _ifBitSet(_attr[0],BIT0) {
 770   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 771   3            } else {
 772   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 773   3            }
 774   2      
 775   2            // ---------- LEFT Window Show "M" ----------
 776   2            _ifBitSet(_attr[1],BIT0) {
 777   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 778   3            } else {
 779   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 780   3            }
 781   2      
 782   2            // ---------- RIGHT Window Show "M" ----------
 783   2            _ifBitSet(_attr[2],BIT0) {
 784   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 785   3            } else {
 786   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 787   3            }
 788   2            break;
 789   2      
 790   2          case VMIX_TYPE_P32: 
 791   2            break;
 792   2      
 793   2          case VMIX_TYPE_P33: // Trun LEFT
 794   2            // ---------- LEFT Window Show "M" ----------
 795   2            _ifBitSet(_attr[0],BIT0) {
 796   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 14  

 797   3            } else {
 798   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 799   3            }
 800   2      
 801   2            // ---------- RIGHT_TOP Window Show "M" ----------
 802   2            _ifBitSet(_attr[1],BIT0) {
 803   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 804   3            } else {
 805   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 806   3            }
 807   2      
 808   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 809   2            _ifBitSet(_attr[2],BIT0) {
 810   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 811   3            } else {
 812   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 813   3            }
 814   2            break;
 815   2      
 816   2          case VMIX_TYPE_P34: // Trun RIGHT
 817   2            // ---------- LEFT_TOP Window Show "M" ----------
 818   2            _ifBitSet(_attr[0],BIT0) {
 819   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 820   3            } else {
 821   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 822   3            }
 823   2      
 824   2            // ---------- RIGHT Window Show "M" ----------
 825   2            _ifBitSet(_attr[1],BIT0) {
 826   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 827   3            } else {
 828   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 829   3            }
 830   2      
 831   2            // ---------- LEFT_DOWN Window Show "M" ----------
 832   2            _ifBitSet(_attr[2],BIT0) {
 833   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 834   3            } else {
 835   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 836   3            }
 837   2            break;
 838   2      
 839   2          case VMIX_TYPE_P41: 
 840   2            // ---------- LEFT_TOP Window Show "M" ----------
 841   2            _ifBitSet(_attr[0],BIT0) {
 842   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 843   3            } else {
 844   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 845   3            }
 846   2      
 847   2            // ---------- RIGHT_TOP Window Show "M" ----------
 848   2            _ifBitSet(_attr[1],BIT0) {
 849   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 850   3            } else {
 851   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 852   3            }
 853   2      
 854   2            // ---------- LEFT_DOWN Window Show "M" ----------
 855   2            _ifBitSet(_attr[2],BIT0) {
 856   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 857   3            } else {
 858   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 15  

 859   3            }
 860   2      
 861   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 862   2            _ifBitSet(_attr[3],BIT0) {
 863   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 864   3            } else {
 865   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 866   3            }
 867   2            break;
 868   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 16  

                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 17  

                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 18  

              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 19  

                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1157   2      
1158   2          default:
1159   2            break;
1160   2        }
1161   1      }
1162          
1163          #define SLCT_X0 31
1164          #define SLCT_X1 52
1165          #define SLCT_X2 73
1166          //+ code unsigned char SPEAKICON[] = {0x01,'\0'};
1167          code unsigned char SPEAKICON[] = {0x0E,'\0'};
1168          // ===========================================================================
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 20  

1169          //
1170          // Show Speak Icon on OSD 
1171          //
1172          void PCT_ShowSpeakIcon(PU8 _attr)
1173          {
1174   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
1175   1        switch(SYSMIXTYP) {
1176   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
1177   2          // ------------------------------------ NTSC ----------------------------------------
1178   2          case VMIX_TYPE_N11: 
1179   2            _ifBitSet(_attr[0],BIT4) {
1180   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1181   3            } else {
1182   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1183   3            }
1184   2            break;
1185   2      
1186   2          case VMIX_TYPE_N21:      //andy 980630
1187   2            _ifBitSet(_attr[0],BIT4) {
1188   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1189   3            } else {
1190   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1191   3            }
1192   2            _ifBitSet(_attr[0],BIT4) {
1193   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1194   3            } else {
1195   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
1196   3            }
1197   2            break;
1198   2      
1199   2          case VMIX_TYPE_N22: 
1200   2            _ifBitSet(_attr[0],BIT4) {
1201   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1202   3            } else {
1203   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1204   3            }
1205   2            _ifBitSet(_attr[1],BIT4) {
1206   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1207   3            } else {
1208   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1209   3            }
1210   2            break;
1211   2      
1212   2          case VMIX_TYPE_N31: // Trun Back
1213   2            _ifBitSet(_attr[0],BIT4) {
1214   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1215   3            } else {
1216   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1217   3            }
1218   2            _ifBitSet(_attr[1],BIT4) {
1219   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
1220   3            } else {
1221   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
1222   3            }
1223   2            _ifBitSet(_attr[2],BIT4) {
1224   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
1225   3            } else {
1226   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
1227   3            }
1228   2            break;
1229   2      
1230   2          case VMIX_TYPE_N32: 
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 21  

1231   2            break;
1232   2      
1233   2          case VMIX_TYPE_N33: // Trun LEFT
1234   2            _ifBitSet(_attr[0],BIT4) {
1235   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1236   3            } else {
1237   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1238   3            }
1239   2            _ifBitSet(_attr[1],BIT4) {
1240   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1241   3            } else {
1242   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1243   3            }
1244   2            _ifBitSet(_attr[2],BIT4) {
1245   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
1246   3            } else {
1247   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
1248   3            }
1249   2            break;
1250   2      
1251   2          case VMIX_TYPE_N34: // Trun RIGHT
1252   2            _ifBitSet(_attr[0],BIT4) {
1253   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1254   3            } else {
1255   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1256   3            }
1257   2            _ifBitSet(_attr[1],BIT4) {
1258   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1259   3            } else {
1260   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1261   3            }
1262   2            _ifBitSet(_attr[2],BIT4) {
1263   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
1264   3            } else {
1265   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
1266   3            }
1267   2            break;
1268   2      
1269   2          case VMIX_TYPE_N41: 
1270   2            _ifBitSet(_attr[0],BIT4) {
1271   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1272   3            } else {
1273   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1274   3            }
1275   2            _ifBitSet(_attr[1],BIT4) {
1276   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1277   3            } else {
1278   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1279   3            }
1280   2            _ifBitSet(_attr[2],BIT4) {
1281   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
1282   3            } else {
1283   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
1284   3            }
1285   2            _ifBitSet(_attr[3],BIT4) {
1286   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
1287   3            } else {
1288   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
1289   3            }
1290   2            break;
1291   2      
1292   2          // ------------------------------------ PAL ----------------------------------------
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 22  

1293   2          case VMIX_TYPE_P11: 
1294   2            _ifBitSet(_attr[0],BIT4) {
1295   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1296   3            } else {
1297   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1298   3            }
1299   2            break;
1300   2      
1301   2          case VMIX_TYPE_P21: 
1302   2            break;
1303   2      
1304   2          case VMIX_TYPE_P22: 
1305   2            _ifBitSet(_attr[0],BIT4) {
1306   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1307   3            } else {
1308   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1309   3            }
1310   2            _ifBitSet(_attr[1],BIT4) {
1311   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1312   3            } else {
1313   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1314   3            }
1315   2            break;
1316   2      
1317   2          case VMIX_TYPE_P31: // Trun Back
1318   2            _ifBitSet(_attr[0],BIT4) {
1319   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
1320   3            } else {
1321   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
1322   3            }
1323   2            _ifBitSet(_attr[1],BIT4) {
1324   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
1325   3            } else {
1326   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
1327   3            }
1328   2            _ifBitSet(_attr[2],BIT4) {
1329   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
1330   3            } else {
1331   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
1332   3            }
1333   2            break;
1334   2      
1335   2          case VMIX_TYPE_P32: 
1336   2            break;
1337   2      
1338   2          case VMIX_TYPE_P33: // Trun LEFT
1339   2            _ifBitSet(_attr[0],BIT4) {
1340   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1341   3            } else {
1342   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1343   3            }
1344   2            _ifBitSet(_attr[1],BIT4) {
1345   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1346   3            } else {
1347   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1348   3            }
1349   2            _ifBitSet(_attr[2],BIT4) {
1350   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
1351   3            } else {
1352   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
1353   3            }
1354   2            break;
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 23  

1355   2      
1356   2          case VMIX_TYPE_P34: // Trun RIGHT
1357   2            _ifBitSet(_attr[0],BIT4) {
1358   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1359   3            } else {
1360   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1361   3            }
1362   2            _ifBitSet(_attr[1],BIT4) {
1363   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1364   3            } else {
1365   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1366   3            }
1367   2            _ifBitSet(_attr[2],BIT4) {
1368   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
1369   3            } else {
1370   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
1371   3            }
1372   2            break;
1373   2      
1374   2          case VMIX_TYPE_P41: 
1375   2            _ifBitSet(_attr[0],BIT4) {
1376   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
1377   3            } else {
1378   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
1379   3            }
1380   2            _ifBitSet(_attr[1],BIT4) {
1381   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
1382   3            } else {
1383   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
1384   3            }
1385   2            _ifBitSet(_attr[2],BIT4) {
1386   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
1387   3            } else {
1388   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
1389   3            }
1390   2            _ifBitSet(_attr[3],BIT4) {
1391   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
1392   3            } else {
1393   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
1394   3            }
1395   2            break;
1396   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 24  

                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 25  

                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 26  

                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 27  

                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1617   2      
1618   2          default:
1619   2            break;
1620   2        }
1621   1      }
1622          
1623          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //Pinchi 20150422 modify to H center
              #define VLS_LCT_XM0 (LOCATE_XM0-4)-8
              #define VLS_LCT_XM1 (LOCATE_XM1-4)-8
              #define VLS_LCT_XM2 (LOCATE_XM2-4)-8
              #else
1629          #define VLS_LCT_XM0 LOCATE_XM0-4
1630          #define VLS_LCT_XM1 LOCATE_XM1-4
1631          #define VLS_LCT_XM2 LOCATE_XM2-4
1632          #endif
1633          
1634          #define LOCATE_YM0  7
1635          #define LOCATE_YM1  13
1636          #define LOCATE_YM2  21
1637          
1638          #define LOCATE_PYM0 8
1639          #define LOCATE_PYM1 16
1640          #define LOCATE_PYM2 25
1641          
1642          //H #define msgVLOSS "VLoss"
1643          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              code unsigned char msgVLOSS[]= {0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1c, 0x1d, 0x1e,'\0
             -'};
              
              #define msgCLEAR_W  15  //Pinchi 20150331 modify for lenghth of NO VIDEO SIGNAL
              #else
1648          code unsigned char msgVLOSS[]= {0x0F, 0x10, 0x11, 0x12, 0x12, '\0'};  // VLoss define for HiSharp
1649          //code unsigned char msgVLOSS[]= {'\0'};  // VLoss define for HiSharp   //william-v3.5-971001
1650          
1651          #define msgCLEAR_W  5
1652          #endif
1653          
1654          
1655          // ===========================================================================
1656          //
1657          // Show VLoss on OSD when Video Signal Loss
1658          //
1659          // ===========================================================================
1660          #ifdef HS
1661          #else
              void PCT_ShowVLoss(void)
              {
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 28  

              #if 0  //Pinchi 20150325 disable
                data U8 tmpsta;
                tmpsta = SYSVDOSGL^MSGVDOSGL;
              #endif
              
                switch(SYSMIXTYP) {
                  // ------------------------------ NTSC ----------------------------
                  case VMIX_TYPE_N11: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_YM1, msgVLOSS) ;
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N21: 
                    break;
              
                  case VMIX_TYPE_N22: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 29  

                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N41: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  // ------------------------------ PAL ----------------------------
                  case VMIX_TYPE_P11: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_PYM1, msgVLOSS) ;
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 30  

                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P41: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  default:
                    break;
C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 31  

                }
              }
              #endif
1853          // ===========================================================================
1854          //
1855          // Show Control Mode OSD 
1856          //
1857          void PCT_ShowModeIcon(void)
1858          {
1859   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
1860   1        // Show System Mode 0:S or 1:J
1861   1        switch(SYSMODE)
1862   1        {
1863   2          case JMODE:
1864   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
1865   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
1866   2            DrawString(1, 0, JMODEOSD);
1867   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
1868   2            break;  
1869   2      
1870   2          case SEQMODE:
1871   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
1872   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
1873   2            DrawString(1, 0, SEQMODEOSD);
1874   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
1875   2            break;
1876   2      
1877   2          case SMODE:
1878   2            break;
1879   2        }
1880   1      }
1881          
1882          // ===========================================================================
1883          //
1884          // Show Other OSD not Recviver Command in 50msec
1885          //
1886          void PCT_OSDActionForHS(void)
1887          {
1888   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
1889   1      #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
1890   1        _ifBitSet(SYSWINATTR[0],BIT1)
1891   1      #else
                ifBitSet(SYSWINATTR[0],BIT1)
              #endif
1894   1        {
1895   2      //    PCT_OSD_ActionPthX(SYSWINATTR);
1896   2          PCT_ShowMirrorIcon(SYSWINATTR);
1897   2          #ifdef UTC
1898   2          #else
                  PCT_ShowSpeakIcon(SYSWINATTR);
                  #endif    
1901   2          PCT_ShowIndicateIcon(SYSWINATTR);
1902   2        }
1903   1        PCT_EnfalshVLoss();//<960820-william>
1904   1        PCT_EnShowOSDPage(WRPHX_PAGE0);
1905   1      }
1906          
1907          
1908          // ===========================================================================
1909          // END of File 
1910          // ==========================================================================

C51 COMPILER V9.50a   OSDACTION                                                            03/13/2018 14:23:18 PAGE 32  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4116    ----
   CONSTANT SIZE    =     37    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1      12
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
