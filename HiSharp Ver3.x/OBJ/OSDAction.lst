C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OSDACTION
OBJECT MODULE PLACED IN .\OBJ\OSDAction.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OSDAction.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OB
                    -J\OSDAction.lst) TABS(2) OBJECT(.\OBJ\OSDAction.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDAction.C
  10          //
  11          //  Purpose: Implementation of OSD Action.
  12          //
  13          //  Version: 0.01                                   2006/12/25 09:43¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/12/25 09:43¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "TW28xx_Video.h"
  35          #include "Timer.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "OSDAction.h"
  39          #include "OSDCtrl.h"
  40          #include "OSD_Graph.h"
  41          #include "Main.h"  //Pinchi 20150323 add
  42          
  43          #include "Printf.h"
  44          #include "monitor.h"
  45          //  ------------------------------------
  46          //      Macro Definitions
  47          //  ------------------------------------ 
  48          #define GRAPH_FONT
  49          #ifndef GRAPH_FONT
                #define DrawString(a, b, c)   PCT_ShowOSDString(PTH_X, a, b, c)
              #else
  52            #define DrawString(a, b, c)   PCT_ShowGraphString(PTH_X, a, b, c)
  53          #endif
  54          
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 2   

  55          #define LOCATE_XM0  20
  56          #define LOCATE_XM1  41
  57          #define LOCATE_XM2  62
  58          
  59          #define LOCATE_YT0  (0)
  60          #define LOCATE_YT0_P  1//for holger Pal
  61          #define LOCATE_YT1  15
  62          #define LOCATE_YT2  18
  63          
  64          code unsigned char camstr[7][3]={ {0x05,'\0'},//"A",
  65                            {0x06,'\0'},//"B",
  66                            {0x07,'\0'},//"C",
  67                            {0x08,'\0'},//"R",
  68                            {0x09,'\0'},//"M",
  69                            {0x0A,'\0'},//"J",
  70                          #if 1  //Pinchi 20150513 add new 'S' for SEQ mode
  71                            {0x1F,'\0'},//"S",
  72                          #else
                                {0x12,'\0'},//"S",
                              #endif
  75          };
  76          
  77          //  ------------------------------------
  78          //      Type Definitions
  79          //  ------------------------------------
  80          
  81          
  82          //  ------------------------------------
  83          //      Variables Definitions
  84          //  ------------------------------------
  85            U8 bdata osdflage=0;
  86            sbit OSDPAGE2 = osdflage^0;
  87            sbit OSDPAGE3 = osdflage^1;
  88            sbit OSDPAGE4 = osdflage^2;
  89            sbit OSDPAGE5 = osdflage^3;
  90            U8 VlossCount;
  91            //bit VlossState;
  92          
  93          
  94            extern bit VlossFlag;
  95          
  96          
  97          #ifdef UTC
              U8 OSDLOCK=0;
              #endif
 100          
 101          //  ------------------------------------
 102          //      Function Prototypes
 103          //  ------------------------------------
 104          
 105          
 106          // ===========================================================================
 107          //                      Parallel function description
 108          // ===========================================================================
 109          //
 110          void PCT_InitialOSD(void)
 111          {
 112   1        data U8 page;
 113   1        //... OSD color index
 114   1        PCT_InitOSDColor();
 115   1        PCT_ClearGraphAttr();
 116   1      
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 3   

 117   1        PCT_PreSetForegroundColor(OSD_COL_100WHT);
 118   1        PCT_PreSetBackgroundColor(OSD_COL_BLU);
 119   1        for(page=0; page<6; page++){
 120   2          PCT_SetOSDDrawPage(page);
 121   2          PCT_FullColorOnOSD(0,0,90,38);      //... max line num is 310 line for OSD
 122   2        }
 123   1        PCT_EnShowOSDPage(WRPHX_PAGE1);
 124   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 125   1        PCT_SetOSDDrawPage(WRPHY_PAGE0);
 126   1        PCT_FullColorOnOSD(0,0,90,38);        // ??
 127   1      
 128   1        SYSMODE=0;
 129   1      }
 130          
 131          // ===========================================================================
 132          //
 133          // PTH_X OSD Action
 134          //
 135          #define OSDBIT  BIT1
 136          void PCT_OSD_ActionPthX(PU8 _attr)
 137          {
 138   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
 139   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 140   1        switch(SYSMIXTYP) {
 141   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 142   2          // ------------------------------------ NTSC ----------------------------------------
 143   2          case VMIX_TYPE_N11:
 144   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 145   2            break;
 146   2      
 147   2          case VMIX_TYPE_N21:
 148   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
 149   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
 150   2            break;
 151   2      
 152   2          case VMIX_TYPE_N22:
 153   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 154   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 155   2            break;
 156   2      
 157   2          case VMIX_TYPE_N31:
 158   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 159   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
 160   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 161   2            break;
 162   2      
 163   2          case VMIX_TYPE_N32:
 164   2            break;
 165   2      
 166   2          case VMIX_TYPE_N33: // Turn LEFT
 167   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 168   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 169   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 170   2            break;
 171   2      
 172   2          case VMIX_TYPE_N34: // Turn RIGHT
 173   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 174   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 175   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 176   2            break;
 177   2      
 178   2          case VMIX_TYPE_N41: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 4   

 179   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 180   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 181   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 182   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
 183   2            break;
 184   2      
 185   2          // ------------------------------------ PAL ----------------------------------------
 186   2          case VMIX_TYPE_P11: 
 187   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 188   2            break;
 189   2      
 190   2          case VMIX_TYPE_P21: 
 191   2                  _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);//andy 98
             -0629
 192   2                  _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 9806
             -29
 193   2            break;
 194   2      
 195   2          case VMIX_TYPE_P22: 
 196   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 197   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 198   2            break;
 199   2      
 200   2          case VMIX_TYPE_P31: 
 201   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 202   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
 203   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 204   2            break;
 205   2      
 206   2          case VMIX_TYPE_P32: 
 207   2            break;
 208   2      
 209   2          case VMIX_TYPE_P33: // Turn LEFT
 210   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 211   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 212   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 213   2            break;
 214   2      
 215   2          case VMIX_TYPE_P34: // Turn RIGHT
 216   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 217   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 218   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 219   2            break;
 220   2      
 221   2          case VMIX_TYPE_P41: 
 222   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 223   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 224   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 225   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
 226   2            break;
 227   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_N21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_N22: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 5   

                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_N31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_P21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_P31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 6   

                  case VMIX_TYPE_P34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
                    break;
                #endif
 314   2      
 315   2          default:
 316   2            break;
 317   2        }
 318   1      }
 319          
 320          // ===========================================================================
 321          //
 322          // Check Video Loss
 323          //
 324          void PCT_EnfalshVLoss(void)
 325          { 
 326   1        SYSVDOSGL |= BIT7;
 327   1      }
 328          
 329          // ===========================================================================
 330          //
 331          // Get Video Signal Status
 332          //
 333          void PCT_GetVideoSignalStatus(void)
 334          {
 335   1        #ifdef UTC
                static BYTE sign=0; 
                BYTE x;
                #endif
 339   1        MSGVDOSGL = ReadSignalSta(0x01, 0x78)&0x0F;
 340   1      
 341   1        if(SYSVDOSGL == MSGVDOSGL) return;        // Check Video Loss
 342   1        // --------------- Processing Show VLoss ---------------
 343   1           //William-V3.10-20100206>>>>>>>>>>>>>>>>NTSC PAL Detect when Video Loss
 344   1        VlossFlag=1;
 345   1        TW28_WriteByte(0x00,0x31,TW28_ReadByte(0x00,0x31)&0x7f);
 346   1        //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 347   1      #ifdef AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
 348   1      //  if (VlossFlag == 0)
 349   1        {
 350   2      //    VlossFlag=1;
 351   2        PCT_ShowVLoss();
 352   2        }
 353   1      #else
                #ifdef HS//don't dispaly vloss OSD
                #else
                PCT_PreSetForegroundColor(OSD_COL_RED255|OSD_BLINK);
                PCT_PreSetGraphAttr(OSD_BLINK);
                PCT_ShowVLoss();
                PCT_ClearGraphAttr();
                #endif
              #endif
 362   1        // -----------------------------------------------------
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 7   

 363   1        SYSVDOSGL = MSGVDOSGL;
 364   1              
 365   1        #ifdef UTC
              
                  if(((~MSGVDOSGL)&0x0f)==0)
                    ;
                  else  if(((((~MSGVDOSGL)&0x0f)^sign)!=0))
                  {
                    x=((~MSGVDOSGL)&0x0f)^sign;
                    x=(x&((~MSGVDOSGL)&0x0f));
                    
                    if((x&0x01)==0x01)  
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
                    else if((x&0x02)==0x02)
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
                    else if((x&0x04)==0x04)
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
                    else if((x&0x08)==0x08)
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
              
                  }
                
                sign=((~MSGVDOSGL)&0x0f);
                #endif
 403   1      
 404   1      }
 405          
 406          // ===========================================================================
 407          //
 408          // Show '<-' on OSD when Trun LEFT
 409          // Show '->' on OSD when Trun RIGHT
 410          //
 411          #define ILCT_X0 28
 412          #define ILCT_X1 49
 413          #define ILCT_X2 70
 414          #define ICONBIT 0x0C
 415          #define ICONSFT 2
 416          
 417          code unsigned char indicate_icon[] = {
 418            0x20,'\0',  //+ 0x20,'\0',
 419            0x0B,'\0',  //+ 0x02,'\0',
 420            0x0C,'\0',  //+ 0x03,'\0',
 421            0x0D,'\0',  //+ 0x04,'\0',
 422          };
 423          
 424          #if 1
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 8   

 425          void PCT_ShowIndicateIcon(PU8 _attr)
 426          {
 427   1        data U8 iconid;
 428   1      //  printf("Command Shell for HiSharp Set S or J Mode");
 429   1        
 430   1        PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
 431   1        switch(SYSMIXTYP) {
 432   2          // ------------------------------------ NTSC & PAL ----------------------------------------
 433   2          case VMIX_TYPE_N11: 
 434   2          case VMIX_TYPE_P11: 
 435   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 436   2      
 437   2            if(iconid) {
 438   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 439   3              DrawString(ILCT_X1, SYSTYPE, &indicate_icon[iconid<<1]);
 440   3              //Printf("(1)");
 441   3            } 
 442   2            else {
 443   3              PCT_ClearWordsPathX(ILCT_X1, SYSTYPE, 1);
 444   3              
 445   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 446   3              if (_attr[0] & 0x20)
 447   3              {
 448   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 449   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 450   4              }
 451   3              else
 452   3              {
 453   4                if (SYSMODE == 0) //Pinchi 20150422 add
 454   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 455   4              }
 456   3            #endif
 457   3            }
 458   2            break;
 459   2      
 460   2          case VMIX_TYPE_N21: 
 461   2          case VMIX_TYPE_P21: ////////////////////////////andy-980604
 462   2            // ---------- LEFT Windows ----------
 463   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 464   2      
 465   2            if(iconid) {
 466   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 467   3              DrawString(ILCT_X0, SYSTYPE, &indicate_icon[iconid<<1]);
 468   3            }
 469   2            else {
 470   3              PCT_ClearWordsPathX(ILCT_X0, SYSTYPE, 1);     
 471   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 472   3              if (_attr[0] & 0x20)
 473   3              {
 474   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 475   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 476   4              }
 477   3              else
 478   3              {
 479   4                if (SYSMODE == 0) //Pinchi 20150422 add
 480   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 481   4              }
 482   3            #endif
 483   3            }
 484   2      
 485   2            // ---------- RIGHT Windows ----------
 486   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 9   

 487   2            if(iconid) {
 488   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 489   3              DrawString(ILCT_X2, SYSTYPE, &indicate_icon[iconid<<1]);
 490   3            }
 491   2            else {
 492   3              PCT_ClearWordsPathX(ILCT_X2, SYSTYPE, 1);
 493   3            }
 494   2            break;
 495   2      
 496   2          case VMIX_TYPE_N22: 
 497   2          case VMIX_TYPE_P22: 
 498   2            // ---------- LEFT Windows ----------
 499   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 500   2      
 501   2            if(iconid) {
 502   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 503   3              DrawString(ILCT_X0, SYSTYPE, &indicate_icon[iconid<<1]);
 504   3            }
 505   2            else {
 506   3              PCT_ClearWordsPathX(ILCT_X0, SYSTYPE, 1);
 507   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 508   3              if (_attr[0] & 0x20)
 509   3              {
 510   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 511   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 512   4              }
 513   3              else
 514   3              {
 515   4                if (SYSMODE == 0) //Pinchi 20150422 add
 516   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 517   4              }
 518   3            #endif
 519   3            }
 520   2      
 521   2            // ---------- RIGHT Windows ----------
 522   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 523   2            if(iconid) {
 524   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 525   3              DrawString(ILCT_X2, SYSTYPE, &indicate_icon[iconid<<1]);
 526   3            }
 527   2            else {
 528   3              PCT_ClearWordsPathX(ILCT_X2, SYSTYPE, 1);
 529   3            }
 530   2            break;
 531   2      
 532   2          case VMIX_TYPE_N31: // Trun Back
 533   2          case VMIX_TYPE_P31: // Trun Back
 534   2            // ---------- Trun Back Window Show "|" ----------
 535   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 536   2      
 537   2            if(iconid) {
 538   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 539   3              DrawString(ILCT_X1, SYSTYPE, &indicate_icon[iconid<<1]);
 540   3            }
 541   2            else {
 542   3              PCT_ClearWordsPathX(ILCT_X1, SYSTYPE, 1);
 543   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 544   3              if (_attr[0] & 0x20)
 545   3              {
 546   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 547   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 548   4              }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 10  

 549   3              else
 550   3              {
 551   4                if (SYSMODE == 0) //Pinchi 20150422 add
 552   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 553   4              }
 554   3            #endif
 555   3            }
 556   2            break;
 557   2      
 558   2          case VMIX_TYPE_N32: 
 559   2          case VMIX_TYPE_P32: 
 560   2            break;
 561   2      
 562   2          case VMIX_TYPE_N33: // Trun LEFT
 563   2          case VMIX_TYPE_P33: // Trun LEFT
 564   2            // ---------- Show "<-" ----------
 565   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 566   2      
 567   2            if(iconid) {
 568   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 569   3              DrawString(ILCT_X0, SYSTYPE, &indicate_icon[iconid<<1]);
 570   3            }
 571   2            else {
 572   3              PCT_ClearWordsPathX(ILCT_X0, SYSTYPE, 1);
 573   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 574   3              if (_attr[0] & 0x20)
 575   3              {
 576   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 577   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 578   4              }
 579   3              else
 580   3              {
 581   4                if (SYSMODE == 0) //Pinchi 20150422 add
 582   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 583   4              }
 584   3            #endif
 585   3            }
 586   2            break;
 587   2      
 588   2          case VMIX_TYPE_N34: // Trun RIGHT
 589   2          case VMIX_TYPE_P34: // Trun RIGHT
 590   2            // ---------- Show "->" ----------
 591   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 592   2      
 593   2            if(iconid) {
 594   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 595   3              DrawString(ILCT_X2, SYSTYPE, &indicate_icon[iconid<<1]);
 596   3            }
 597   2            else {
 598   3              PCT_ClearWordsPathX(ILCT_X2, SYSTYPE, 1);
 599   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 600   3              if (_attr[0] & 0x20)
 601   3              {
 602   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 603   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 604   4              }
 605   3              else
 606   3              {
 607   4                if (SYSMODE == 0) //Pinchi 20150422 add
 608   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 609   4              }
 610   3            #endif
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 11  

 611   3            }
 612   2            break;
 613   2      
 614   2          case VMIX_TYPE_N41: 
 615   2          case VMIX_TYPE_P41: 
 616   2            break;
 617   2      
 618   2          default:  
 619   2            break;
 620   2        }
 621   1      }
 622          #else
              void PCT_ShowIndicateIcon(PU8 _attr)
              {
                data U8 iconid;
              //  printf("Command Shell for HiSharp Set S or J Mode");
                
                PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
                switch(SYSMIXTYP) {
                  // ------------------------------------ NTSC & PAL ----------------------------------------
                  case VMIX_TYPE_N11: 
                  case VMIX_TYPE_P11: 
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    } 
                    else {
                      PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                  case VMIX_TYPE_P21: ////////////////////////////andy-980604
                    // ---------- LEFT Windows ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);      
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 12  

                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
              
                    // ---------- RIGHT Windows ----------
                    iconid = (_attr[1]&ICONBIT) >> ICONSFT;
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Windows ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
              
                    // ---------- RIGHT Windows ----------
                    iconid = (_attr[1]&ICONBIT) >> ICONSFT;
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- Trun Back Window Show "|" ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 13  

                      DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- Show "<-" ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- Show "->" ----------
                    iconid = (_attr[1]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 14  

                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                  case VMIX_TYPE_P41: 
                    break;
              
                  default:  
                    break;
                }
              }
              #endif
 819          // ===========================================================================
 820          //
 821          // Show 'M'  on OSD when Video Mirror
 822          //
 823          #define MLCT_X0 23
 824          #define MLCT_X1 44
 825          #define MLCT_X2 65
 826          #define MIRROR  camstr[4]
 827          
 828          #if 1//for holger
 829          
 830          void PCT_ShowMirrorIcon(PU8 _attr)
 831          {
 832   1        PCT_PreSetForegroundColor(OSD_COL_YLW);
 833   1        switch(SYSMIXTYP) {
 834   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 835   2          // ------------------------------------ NTSC ----------------------------------------
 836   2          case VMIX_TYPE_N11: 
 837   2            // ---------- Window Show "M" ----------
 838   2            _ifBitSet(_attr[0],BIT0) {
 839   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 840   3            } else {
 841   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 842   3            }
 843   2            break;
 844   2      
 845   2          case VMIX_TYPE_N21: 
 846   2                  // ----------UP Window Show "M" ----------
 847   2            _ifBitSet(_attr[0],BIT0) {
 848   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 849   3            } else {
 850   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 851   3            }
 852   2                  // ----------DOWN Window Show "M" ----------
 853   2            _ifBitSet(_attr[1],BIT0) {
 854   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 855   3            } else {
 856   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 857   3            } 
 858   2            break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 15  

 859   2      
 860   2          case VMIX_TYPE_N22: 
 861   2            // ---------- LEFT Window Show "M" ----------
 862   2            _ifBitSet(_attr[0],BIT0) {
 863   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 864   3            } else {
 865   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 866   3            }
 867   2      
 868   2            // ---------- RIGHT Window Show "M" ----------
 869   2            _ifBitSet(_attr[1],BIT0) {
 870   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 871   3            } else {
 872   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 873   3            }
 874   2      
 875   2            break;
 876   2      
 877   2          case VMIX_TYPE_N31: // Trun Back
 878   2            // ---------- TOP Window Show "M" ----------
 879   2            _ifBitSet(_attr[0],BIT0) {
 880   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 881   3            } else {
 882   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 883   3            }
 884   2      
 885   2            // ---------- LEFT Window Show "M" ----------
 886   2            _ifBitSet(_attr[1],BIT0) {
 887   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 888   3            } else {
 889   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 890   3            }
 891   2      
 892   2            // ---------- RIGHT Window Show "M" ----------
 893   2            _ifBitSet(_attr[2],BIT0) {
 894   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 895   3            } else {
 896   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 897   3            }
 898   2            break;
 899   2      
 900   2          case VMIX_TYPE_N32: 
 901   2            break;
 902   2      
 903   2          case VMIX_TYPE_N33: // Trun LEFT
 904   2            // ---------- LEFT Window Show "M" ----------
 905   2            _ifBitSet(_attr[0],BIT0) {
 906   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 907   3            } else {
 908   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 909   3            }
 910   2      
 911   2            // ---------- RIGHT_TOP Window Show "M" ----------
 912   2            _ifBitSet(_attr[1],BIT0) {
 913   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 914   3            } else {
 915   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 916   3            }
 917   2      
 918   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 919   2            _ifBitSet(_attr[2],BIT0) {
 920   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 16  

 921   3            } else {
 922   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 923   3            }
 924   2            break;
 925   2      
 926   2          case VMIX_TYPE_N34: // Trun RIGHT
 927   2            // ---------- LEFT_TOP Window Show "M" ----------
 928   2            _ifBitSet(_attr[0],BIT0) {
 929   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 930   3            } else {
 931   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 932   3            }
 933   2      
 934   2            // ---------- RIGHT Window Show "M" ----------
 935   2            _ifBitSet(_attr[1],BIT0) {
 936   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 937   3            } else {
 938   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 939   3            }
 940   2      
 941   2            // ---------- LEFT_DOWN Window Show "M" ----------
 942   2            _ifBitSet(_attr[2],BIT0) {
 943   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 944   3            } else {
 945   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 946   3            }
 947   2            break;
 948   2      
 949   2          case VMIX_TYPE_N41: 
 950   2            // ---------- LEFT_TOP Window Show "M" ----------
 951   2            _ifBitSet(_attr[0],BIT0) {
 952   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 953   3            } else {
 954   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 955   3            }
 956   2      
 957   2            // ---------- RIGHT_TOP Window Show "M" ----------
 958   2            _ifBitSet(_attr[1],BIT0) {
 959   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 960   3            } else {
 961   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 962   3            }
 963   2      
 964   2            // ---------- LEFT_DOWN Window Show "M" ----------
 965   2            _ifBitSet(_attr[2],BIT0) {
 966   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 967   3            } else {
 968   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 969   3            }
 970   2      
 971   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 972   2            _ifBitSet(_attr[3],BIT0) {
 973   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 974   3            } else {
 975   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 976   3            }
 977   2            break;
 978   2      
 979   2          // ------------------------------------ PAL ----------------------------------------
 980   2          case VMIX_TYPE_P11: 
 981   2            // ---------- Window Show "M" ----------
 982   2            _ifBitSet(_attr[0],BIT0) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 17  

 983   3              DrawString(MLCT_X1, SYSTYPE, MIRROR);
 984   3            } else {
 985   3              PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
 986   3            }
 987   2            break;
 988   2      
 989   2          case VMIX_TYPE_P21: 
 990   2                   // ----------UP Window Show "M" ----------
 991   2            _ifBitSet(_attr[0],BIT0) {
 992   3              DrawString(MLCT_X1, SYSTYPE, MIRROR);
 993   3            } else {
 994   3              PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
 995   3            }
 996   2                  // ----------DOWN Window Show "M" ----------
 997   2            _ifBitSet(_attr[1],BIT0) {
 998   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 999   3            } else {
1000   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
1001   3            }
1002   2            break;
1003   2      
1004   2          case VMIX_TYPE_P22: 
1005   2            // ---------- LEFT Window Show "M" ----------
1006   2            _ifBitSet(_attr[0],BIT0) {
1007   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1008   3            } else {
1009   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1010   3            }
1011   2      
1012   2            // ---------- RIGHT Window Show "M" ----------
1013   2            _ifBitSet(_attr[1],BIT0) {
1014   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1015   3            } else {
1016   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1017   3            }
1018   2      
1019   2            break;
1020   2      
1021   2          case VMIX_TYPE_P31: // Trun Back
1022   2            // ---------- TOP Window Show "M" ----------
1023   2            _ifBitSet(_attr[0],BIT0) {
1024   3              DrawString(MLCT_X1, SYSTYPE, MIRROR);
1025   3            } else {
1026   3              PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
1027   3            }
1028   2      
1029   2            // ---------- LEFT Window Show "M" ----------
1030   2            _ifBitSet(_attr[1],BIT0) {
1031   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
1032   3            } else {
1033   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
1034   3            }
1035   2      
1036   2            // ---------- RIGHT Window Show "M" ----------
1037   2            _ifBitSet(_attr[2],BIT0) {
1038   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
1039   3            } else {
1040   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
1041   3            }
1042   2            break;
1043   2      
1044   2          case VMIX_TYPE_P32: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 18  

1045   2            break;
1046   2      
1047   2          case VMIX_TYPE_P33: // Trun LEFT
1048   2            // ---------- LEFT Window Show "M" ----------
1049   2            _ifBitSet(_attr[0],BIT0) {
1050   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1051   3            } else {
1052   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1053   3            }
1054   2      
1055   2            // ---------- RIGHT_TOP Window Show "M" ----------
1056   2            _ifBitSet(_attr[1],BIT0) {
1057   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1058   3            } else {
1059   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1060   3            }
1061   2      
1062   2            // ---------- RIGHT_DOWN Window Show "M" ----------
1063   2            _ifBitSet(_attr[2],BIT0) {
1064   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
1065   3            } else {
1066   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
1067   3            }
1068   2            break;
1069   2      
1070   2          case VMIX_TYPE_P34: // Trun RIGHT
1071   2            // ---------- LEFT_TOP Window Show "M" ----------
1072   2            _ifBitSet(_attr[0],BIT0) {
1073   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1074   3            } else {
1075   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1076   3            }
1077   2      
1078   2            // ---------- RIGHT Window Show "M" ----------
1079   2            _ifBitSet(_attr[1],BIT0) {
1080   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1081   3            } else {
1082   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1083   3            }
1084   2      
1085   2            // ---------- LEFT_DOWN Window Show "M" ----------
1086   2            _ifBitSet(_attr[2],BIT0) {
1087   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
1088   3            } else {
1089   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
1090   3            }
1091   2            break;
1092   2      
1093   2          case VMIX_TYPE_P41: 
1094   2            // ---------- LEFT_TOP Window Show "M" ----------
1095   2            _ifBitSet(_attr[0],BIT0) {
1096   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1097   3            } else {
1098   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1099   3            }
1100   2      
1101   2            // ---------- RIGHT_TOP Window Show "M" ----------
1102   2            _ifBitSet(_attr[1],BIT0) {
1103   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1104   3            } else {
1105   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1106   3            }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 19  

1107   2      
1108   2            // ---------- LEFT_DOWN Window Show "M" ----------
1109   2            _ifBitSet(_attr[2],BIT0) {
1110   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
1111   3            } else {
1112   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
1113   3            }
1114   2      
1115   2            // ---------- RIGHT_DOWN Window Show "M" ----------
1116   2            _ifBitSet(_attr[3],BIT0) {
1117   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
1118   3            } else {
1119   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
1120   3            }
1121   2            break;
1122   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 20  

                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 21  

                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 22  

                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 23  

                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1411   2      
1412   2          default:
1413   2            break;
1414   2        }
1415   1      }
1416          #else
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 24  

              void PCT_ShowMirrorIcon(PU8 _attr)
              {
                PCT_PreSetForegroundColor(OSD_COL_YLW);
                switch(SYSMIXTYP) {
                #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 25  

                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 26  

                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 27  

                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 28  

                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 29  

                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 30  

                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 31  

                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 32  

                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 33  

              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
              
                  default:
                    break;
                }
              }
              #endif
2004          #define SLCT_X0 31
2005          #define SLCT_X1 52
2006          #define SLCT_X2 73
2007          //+ code unsigned char SPEAKICON[] = {0x01,'\0'};
2008          code unsigned char SPEAKICON[] = {0x0E,'\0'};
2009          // ===========================================================================
2010          //
2011          // Show Speak Icon on OSD 
2012          //
2013          #ifdef UTC
              #else
2015          #if 1///for holger
2016          void PCT_ShowSpeakIcon(PU8 _attr)
2017          {
2018   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
2019   1        switch(SYSMIXTYP) {
2020   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
2021   2          // ------------------------------------ NTSC ----------------------------------------
2022   2          case VMIX_TYPE_N11: 
2023   2            _ifBitSet(_attr[0],BIT4) {
2024   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2025   3            } else {
2026   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
2027   3            }
2028   2            break;
2029   2      
2030   2          case VMIX_TYPE_N21:      //andy 980630
2031   2            _ifBitSet(_attr[0],BIT4) {
2032   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2033   3            } else {
2034   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
2035   3            }
2036   2            _ifBitSet(_attr[0],BIT4) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 34  

2037   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2038   3            } else {
2039   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
2040   3            }
2041   2            break;
2042   2      
2043   2          case VMIX_TYPE_N22: 
2044   2            _ifBitSet(_attr[0],BIT4) {
2045   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2046   3            } else {
2047   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2048   3            }
2049   2            _ifBitSet(_attr[1],BIT4) {
2050   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2051   3            } else {
2052   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2053   3            }
2054   2            break;
2055   2      
2056   2          case VMIX_TYPE_N31: // Trun Back
2057   2            _ifBitSet(_attr[0],BIT4) {
2058   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2059   3            } else {
2060   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
2061   3            }
2062   2            _ifBitSet(_attr[1],BIT4) {
2063   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
2064   3            } else {
2065   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
2066   3            }
2067   2            _ifBitSet(_attr[2],BIT4) {
2068   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
2069   3            } else {
2070   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
2071   3            }
2072   2            break;
2073   2      
2074   2          case VMIX_TYPE_N32: 
2075   2            break;
2076   2      
2077   2          case VMIX_TYPE_N33: // Trun LEFT
2078   2            _ifBitSet(_attr[0],BIT4) {
2079   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2080   3            } else {
2081   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2082   3            }
2083   2            _ifBitSet(_attr[1],BIT4) {
2084   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2085   3            } else {
2086   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2087   3            }
2088   2            _ifBitSet(_attr[2],BIT4) {
2089   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
2090   3            } else {
2091   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
2092   3            }
2093   2            break;
2094   2      
2095   2          case VMIX_TYPE_N34: // Trun RIGHT
2096   2            _ifBitSet(_attr[0],BIT4) {
2097   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2098   3            } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 35  

2099   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2100   3            }
2101   2            _ifBitSet(_attr[1],BIT4) {
2102   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2103   3            } else {
2104   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2105   3            }
2106   2            _ifBitSet(_attr[2],BIT4) {
2107   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
2108   3            } else {
2109   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
2110   3            }
2111   2            break;
2112   2      
2113   2          case VMIX_TYPE_N41: 
2114   2            _ifBitSet(_attr[0],BIT4) {
2115   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2116   3            } else {
2117   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2118   3            }
2119   2            _ifBitSet(_attr[1],BIT4) {
2120   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2121   3            } else {
2122   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2123   3            }
2124   2            _ifBitSet(_attr[2],BIT4) {
2125   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
2126   3            } else {
2127   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
2128   3            }
2129   2            _ifBitSet(_attr[3],BIT4) {
2130   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
2131   3            } else {
2132   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
2133   3            }
2134   2            break;
2135   2      
2136   2          // ------------------------------------ PAL ----------------------------------------
2137   2          case VMIX_TYPE_P11: 
2138   2            _ifBitSet(_attr[0],BIT4) {
2139   3              DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
2140   3            } else {
2141   3              PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
2142   3            }
2143   2            break;
2144   2      
2145   2          case VMIX_TYPE_P21: 
2146   2            break;
2147   2      
2148   2          case VMIX_TYPE_P22: 
2149   2            _ifBitSet(_attr[0],BIT4) {
2150   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2151   3            } else {
2152   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2153   3            }
2154   2            _ifBitSet(_attr[1],BIT4) {
2155   3              DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
2156   3            } else {
2157   3              PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
2158   3            }
2159   2            break;
2160   2      
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 36  

2161   2          case VMIX_TYPE_P31: // Trun Back
2162   2            _ifBitSet(_attr[0],BIT4) {
2163   3              DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
2164   3            } else {
2165   3              PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
2166   3            }
2167   2            _ifBitSet(_attr[1],BIT4) {
2168   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
2169   3            } else {
2170   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
2171   3            }
2172   2            _ifBitSet(_attr[2],BIT4) {
2173   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
2174   3            } else {
2175   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
2176   3            }
2177   2            break;
2178   2      
2179   2          case VMIX_TYPE_P32: 
2180   2            break;
2181   2      
2182   2          case VMIX_TYPE_P33: // Trun LEFT
2183   2            _ifBitSet(_attr[0],BIT4) {
2184   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2185   3            } else {
2186   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2187   3            }
2188   2            _ifBitSet(_attr[1],BIT4) {
2189   3              DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
2190   3            } else {
2191   3              PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
2192   3            }
2193   2            _ifBitSet(_attr[2],BIT4) {
2194   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
2195   3            } else {
2196   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
2197   3            }
2198   2            break;
2199   2      
2200   2          case VMIX_TYPE_P34: // Trun RIGHT
2201   2            _ifBitSet(_attr[0],BIT4) {
2202   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2203   3            } else {
2204   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2205   3            }
2206   2            _ifBitSet(_attr[1],BIT4) {
2207   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2208   3            } else {
2209   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2210   3            }
2211   2            _ifBitSet(_attr[2],BIT4) {
2212   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
2213   3            } else {
2214   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
2215   3            }
2216   2            break;
2217   2      
2218   2          case VMIX_TYPE_P41: 
2219   2            _ifBitSet(_attr[0],BIT4) {
2220   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2221   3            } else {
2222   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 37  

2223   3            }
2224   2            _ifBitSet(_attr[1],BIT4) {
2225   3              DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
2226   3            } else {
2227   3              PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
2228   3            }
2229   2            _ifBitSet(_attr[2],BIT4) {
2230   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
2231   3            } else {
2232   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
2233   3            }
2234   2            _ifBitSet(_attr[3],BIT4) {
2235   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
2236   3            } else {
2237   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
2238   3            }
2239   2            break;
2240   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 38  

                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 39  

                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 40  

                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
2461   2      
2462   2          default:
2463   2            break;
2464   2        }
2465   1      }
2466          #else
              void PCT_ShowSpeakIcon(PU8 _attr)
              {
                PCT_PreSetForegroundColor(OSD_COL_GRN);
                switch(SYSMIXTYP) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 41  

                #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 42  

                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    _ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 43  

              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 44  

                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    _ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 45  

                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 46  

                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 47  

                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 48  

                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
              
                  default:
                    break;
                }
              }
              #endif
2918          
2919          #endif
2920          
2921          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //Pinchi 20150422 modify to H center
              #define VLS_LCT_XM0 (LOCATE_XM0-4)-8
              #define VLS_LCT_XM1 (LOCATE_XM1-4)-8
              #define VLS_LCT_XM2 (LOCATE_XM2-4)-8
              #else
2927          #define VLS_LCT_XM0 LOCATE_XM0-4
2928          #define VLS_LCT_XM1 LOCATE_XM1-4
2929          #define VLS_LCT_XM2 LOCATE_XM2-4
2930          #endif
2931          
2932          #define LOCATE_YM0  7
2933          #define LOCATE_YM1  13
2934          #define LOCATE_YM2  21
2935          
2936          #define LOCATE_PYM0 8
2937          #define LOCATE_PYM1 16
2938          #define LOCATE_PYM2 25
2939          
2940          //H #define msgVLOSS "VLoss"
2941          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              code unsigned char msgVLOSS[]= {0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1c, 0x1d, 0x1e,'\0
             -'};
              
              #define msgCLEAR_W  15  //Pinchi 20150331 modify for lenghth of NO VIDEO SIGNAL
              #else
2946          code unsigned char msgVLOSS[]= {0x0F, 0x10, 0x11, 0x12, 0x12, '\0'};  // VLoss define for HiSharp
2947          //code unsigned char msgVLOSS[]= {'\0'};  // VLoss define for HiSharp   //william-v3.5-971001
2948          
2949          #define msgCLEAR_W  5
2950          #endif
2951          
2952          
2953          // ===========================================================================
2954          //
2955          // Show VLoss on OSD when Video Signal Loss
2956          //
2957          // ===========================================================================
2958          #ifdef HS
              #else
2960          void PCT_ShowVLoss(void)
2961          {
2962   1      #if 0  //Pinchi 20150325 disable
                data U8 tmpsta;
                tmpsta = SYSVDOSGL^MSGVDOSGL;
              #endif
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 49  

2966   1      
2967   1        switch(SYSMIXTYP) {
2968   2          // ------------------------------ NTSC ----------------------------
2969   2          case VMIX_TYPE_N11: 
2970   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
2971   2              DrawString(VLS_LCT_XM1, LOCATE_YM1, msgVLOSS) ;
2972   2            else
2973   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM1, msgCLEAR_W);
2974   2            break;
2975   2      
2976   2          case VMIX_TYPE_N21: 
2977   2            break;
2978   2      
2979   2          case VMIX_TYPE_N22: 
2980   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
2981   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
2982   2            else
2983   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
2984   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
2985   2              DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
2986   2            else
2987   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
2988   2            break;
2989   2      
2990   2          case VMIX_TYPE_N31: // Trun Back
2991   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
2992   2              DrawString(VLS_LCT_XM1, LOCATE_YM0, msgVLOSS);
2993   2            else
2994   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM0, msgCLEAR_W);
2995   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
2996   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
2997   2            else
2998   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
2999   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3000   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
3001   2            else
3002   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
3003   2            break;
3004   2      
3005   2          case VMIX_TYPE_N32: 
3006   2            break;
3007   2      
3008   2          case VMIX_TYPE_N33: // Trun LEFT
3009   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3010   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
3011   2            else
3012   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
3013   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3014   2              DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
3015   2            else
3016   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
3017   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3018   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
3019   2            else
3020   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
3021   2            break;
3022   2      
3023   2          case VMIX_TYPE_N34: // Trun RIGHT
3024   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3025   2              DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
3026   2            else
3027   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 50  

3028   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3029   2              DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
3030   2            else
3031   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
3032   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3033   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
3034   2            else
3035   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
3036   2            break;
3037   2      
3038   2          case VMIX_TYPE_N41: 
3039   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3040   2              DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
3041   2            else
3042   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
3043   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3044   2              DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
3045   2            else
3046   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
3047   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3048   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
3049   2            else
3050   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
3051   2            if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
3052   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
3053   2            else
3054   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
3055   2            break;
3056   2      
3057   2          // ------------------------------ PAL ----------------------------
3058   2          case VMIX_TYPE_P11: 
3059   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3060   2              DrawString(VLS_LCT_XM1, LOCATE_PYM1, msgVLOSS) ;
3061   2            else
3062   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM1, msgCLEAR_W);
3063   2            break;
3064   2      
3065   2          case VMIX_TYPE_P21: 
3066   2            break;
3067   2      
3068   2          case VMIX_TYPE_P22: 
3069   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3070   2              DrawString(VLS_LCT_XM0, LOCATE_PYM1, msgVLOSS);
3071   2            else
3072   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
3073   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3074   2              DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
3075   2            else
3076   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
3077   2            break;
3078   2      
3079   2          case VMIX_TYPE_P31: // Trun Back
3080   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3081   2              DrawString(VLS_LCT_XM1, LOCATE_PYM0, msgVLOSS);
3082   2            else
3083   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM0, msgCLEAR_W);
3084   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3085   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
3086   2            else
3087   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
3088   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3089   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 51  

3090   2            else
3091   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
3092   2            break;
3093   2      
3094   2          case VMIX_TYPE_P32: 
3095   2            break;
3096   2      
3097   2          case VMIX_TYPE_P33: // Trun LEFT
3098   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3099   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
3100   2            else
3101   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
3102   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3103   2              DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
3104   2            else
3105   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
3106   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3107   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
3108   2            else
3109   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
3110   2            break;
3111   2      
3112   2          case VMIX_TYPE_P34: // Trun RIGHT
3113   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3114   2              DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
3115   2            else
3116   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
3117   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3118   2              DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
3119   2            else
3120   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
3121   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3122   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
3123   2            else
3124   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
3125   2            break;
3126   2      
3127   2          case VMIX_TYPE_P41: 
3128   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3129   2              DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
3130   2            else
3131   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
3132   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3133   2              DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
3134   2            else
3135   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
3136   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3137   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
3138   2            else
3139   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
3140   2            if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
3141   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
3142   2            else
3143   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
3144   2            break;
3145   2      
3146   2          default:
3147   2            break;
3148   2        }
3149   1        
3150   1      }
3151          #endif
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 52  

3152          // ===========================================================================
3153          //
3154          // Show Control Mode OSD 
3155          //
3156          #if 1//for holger pal
3157          void PCT_ShowModeIcon(void)
3158          {
3159   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
3160   1        // Show System Mode 0:S or 1:J
3161   1        switch(SYSMODE)
3162   1        {
3163   2          case JMODE:
3164   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
3165   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
3166   2            DrawString(1, SYSTYPE, JMODEOSD);
3167   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
3168   2            break;  
3169   2      
3170   2          case SEQMODE:
3171   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
3172   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
3173   2            DrawString(1, SYSTYPE, SEQMODEOSD);
3174   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
3175   2            break;
3176   2      
3177   2          case SMODE:
3178   2            break;
3179   2        }
3180   1      }
3181          #else
              void PCT_ShowModeIcon(void)
              {
                PCT_SetOSDDrawPage(WRPHX_PAGE0);
                // Show System Mode 0:S or 1:J
                switch(SYSMODE)
                {
                  case JMODE:
                    PCT_PreSetBackgroundColor(OSD_COL_BLU);
                    PCT_PreSetForegroundColor(OSD_COL_100WHT);
                    DrawString(1, 0, JMODEOSD);
                    PCT_PreSetBackgroundColor(OSD_COL_CLR);
                    break;  
              
                  case SEQMODE:
                    PCT_PreSetBackgroundColor(OSD_COL_BLU);
                    PCT_PreSetForegroundColor(OSD_COL_100WHT);
                    DrawString(1, 0, SEQMODEOSD);
                    PCT_PreSetBackgroundColor(OSD_COL_CLR);
                    break;
              
                  case SMODE:
                    break;
                }
              }
              #endif
3207          // ===========================================================================
3208          //
3209          // Show Other OSD not Recviver Command in 50msec
3210          //
3211          void PCT_OSDActionForHS(void)
3212          {
3213   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/14/2021 15:23:06 PAGE 53  

3214   1      #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
3215   1        _ifBitSet(SYSWINATTR[0],BIT1)
3216   1      #else
                ifBitSet(SYSWINATTR[0],BIT1)
              #endif
3219   1        {
3220   2      //    PCT_OSD_ActionPthX(SYSWINATTR);
3221   2          PCT_ShowMirrorIcon(SYSWINATTR);
3222   2          #ifdef UTC
                  #else
3224   2          PCT_ShowSpeakIcon(SYSWINATTR);
3225   2          #endif    
3226   2          PCT_ShowIndicateIcon(SYSWINATTR);
3227   2        }
3228   1        PCT_EnfalshVLoss();//<960820-william>
3229   1        PCT_EnShowOSDPage(WRPHX_PAGE0);
3230   1      }
3231          
3232          
3233          // ===========================================================================
3234          // END of File 
3235          // ==========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6048    ----
   CONSTANT SIZE    =     37    ----
   XDATA SIZE       =      1      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
