C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE OSDACTION
OBJECT MODULE PLACED IN .\OBJ\OSDAction.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE OSDAction.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ
                    -\OSDAction.lst) TABS(2) OBJECT(.\OBJ\OSDAction.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDAction.C
  10          //
  11          //  Purpose: Implementation of OSD Action.
  12          //
  13          //  Version: 0.01                                   2006/12/25 09:43¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/12/25 09:43¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "TW28xx_Video.h"
  35          #include "Timer.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "OSDAction.h"
  39          #include "OSDCtrl.h"
  40          #include "OSD_Graph.h"
  41          #include "Main.h"  //Pinchi 20150323 add
  42          
  43          
  44          //  ------------------------------------
  45          //      Macro Definitions
  46          //  ------------------------------------ 
  47          #define GRAPH_FONT
  48          #ifndef GRAPH_FONT
                #define DrawString(a, b, c)   PCT_ShowOSDString(PTH_X, a, b, c)
              #else
  51            #define DrawString(a, b, c)   PCT_ShowGraphString(PTH_X, a, b, c)
  52          #endif
  53          
  54          #define LOCATE_XM0  20
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 2   

  55          #define LOCATE_XM1  41
  56          #define LOCATE_XM2  62
  57          
  58          #define LOCATE_YT0  0
  59          #define LOCATE_YT1  15
  60          #define LOCATE_YT2  18
  61          
  62          code unsigned char camstr[7][3]={ {0x05,'\0'},//"A",
  63                            {0x06,'\0'},//"B",
  64                            {0x07,'\0'},//"C",
  65                            {0x08,'\0'},//"R",
  66                            {0x09,'\0'},//"M",
  67                            {0x0A,'\0'},//"J",
  68                          #if 1  //Pinchi 20150513 add new 'S' for SEQ mode
  69                            {0x1F,'\0'},//"S",
  70                          #else
                                {0x12,'\0'},//"S",
                              #endif
  73          };
  74          
  75          //  ------------------------------------
  76          //      Type Definitions
  77          //  ------------------------------------
  78          
  79          
  80          //  ------------------------------------
  81          //      Variables Definitions
  82          //  ------------------------------------
  83            U8 bdata osdflage=0;
  84            sbit OSDPAGE2 = osdflage^0;
  85            sbit OSDPAGE3 = osdflage^1;
  86            sbit OSDPAGE4 = osdflage^2;
  87            sbit OSDPAGE5 = osdflage^3;
  88            U8 VlossCount;
  89            //bit VlossState;
  90          
  91            extern bit VlossFlag;
  92          
  93          //  ------------------------------------
  94          //      Function Prototypes
  95          //  ------------------------------------
  96          
  97          
  98          // ===========================================================================
  99          //                      Parallel function description
 100          // ===========================================================================
 101          //
 102          void PCT_InitialOSD(void)
 103          {
 104   1        data U8 page;
 105   1        //... OSD color index
 106   1        PCT_InitOSDColor();
 107   1        PCT_ClearGraphAttr();
 108   1      
 109   1        PCT_PreSetForegroundColor(OSD_COL_100WHT);
 110   1        PCT_PreSetBackgroundColor(OSD_COL_BLU);
 111   1        for(page=0; page<6; page++){
 112   2          PCT_SetOSDDrawPage(page);
 113   2          PCT_FullColorOnOSD(0,0,90,38);      //... max line num is 310 line for OSD
 114   2        }
 115   1        PCT_EnShowOSDPage(WRPHX_PAGE1);
 116   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 3   

 117   1        PCT_SetOSDDrawPage(WRPHY_PAGE0);
 118   1        PCT_FullColorOnOSD(0,0,90,38);        // ??
 119   1      
 120   1        SYSMODE=0;
 121   1      }
 122          
 123          // ===========================================================================
 124          //
 125          // PTH_X OSD Action
 126          //
 127          #define OSDBIT  BIT1
 128          void PCT_OSD_ActionPthX(PU8 _attr)
 129          {
 130   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
 131   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 132   1        switch(SYSMIXTYP) {
 133   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 134   2          // ------------------------------------ NTSC ----------------------------------------
 135   2          case VMIX_TYPE_N11:
 136   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 137   2            break;
 138   2      
 139   2          case VMIX_TYPE_N21:
 140   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
 141   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
 142   2            break;
 143   2      
 144   2          case VMIX_TYPE_N22:
 145   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 146   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 147   2            break;
 148   2      
 149   2          case VMIX_TYPE_N31:
 150   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 151   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
 152   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 153   2            break;
 154   2      
 155   2          case VMIX_TYPE_N32:
 156   2            break;
 157   2      
 158   2          case VMIX_TYPE_N33: // Turn LEFT
 159   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 160   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 161   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 162   2            break;
 163   2      
 164   2          case VMIX_TYPE_N34: // Turn RIGHT
 165   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 166   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 167   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 168   2            break;
 169   2      
 170   2          case VMIX_TYPE_N41: 
 171   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 172   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 173   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 174   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
 175   2            break;
 176   2      
 177   2          // ------------------------------------ PAL ----------------------------------------
 178   2          case VMIX_TYPE_P11: 
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 4   

 179   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 180   2            break;
 181   2      
 182   2          case VMIX_TYPE_P21: 
 183   2                  _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 9806
             -29
 184   2                  _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 9806
             -29
 185   2            break;
 186   2      
 187   2          case VMIX_TYPE_P22: 
 188   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 189   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 190   2            break;
 191   2      
 192   2          case VMIX_TYPE_P31: 
 193   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 194   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
 195   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 196   2            break;
 197   2      
 198   2          case VMIX_TYPE_P32: 
 199   2            break;
 200   2      
 201   2          case VMIX_TYPE_P33: // Turn LEFT
 202   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 203   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 204   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 205   2            break;
 206   2      
 207   2          case VMIX_TYPE_P34: // Turn RIGHT
 208   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 209   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 210   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 211   2            break;
 212   2      
 213   2          case VMIX_TYPE_P41: 
 214   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 215   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 216   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 217   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
 218   2            break;
 219   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_N21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_N31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 5   

                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_P21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_P31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 6   

                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
                    break;
                #endif
 306   2      
 307   2          default:
 308   2            break;
 309   2        }
 310   1      }
 311          
 312          // ===========================================================================
 313          //
 314          // Check Video Loss
 315          //
 316          void PCT_EnfalshVLoss(void)
 317          { 
 318   1        SYSVDOSGL |= BIT7;
 319   1      }
 320          
 321          // ===========================================================================
 322          //
 323          // Get Video Signal Status
 324          //
 325          void PCT_GetVideoSignalStatus(void)
 326          {
 327   1        #ifdef UTC
 328   1        static BYTE sign=0; 
 329   1        BYTE x;
 330   1        #endif
 331   1        MSGVDOSGL = ReadSignalSta(0x01, 0x78)&0x0F;
 332   1      
 333   1        if(SYSVDOSGL == MSGVDOSGL) return;        // Check Video Loss
 334   1        // --------------- Processing Show VLoss ---------------
 335   1           //William-V3.10-20100206>>>>>>>>>>>>>>>>NTSC PAL Detect when Video Loss
 336   1        VlossFlag=1;
 337   1        TW28_WriteByte(0x00,0x31,TW28_ReadByte(0x00,0x31)&0x7f);
 338   1        //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 339   1      #ifdef AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //  if (VlossFlag == 0)
                {
              //    VlossFlag=1;
                PCT_ShowVLoss();
                }
              #else
 346   1        #ifdef HS//don't dispaly vloss OSD
 347   1        #else
                PCT_PreSetForegroundColor(OSD_COL_RED255|OSD_BLINK);
                PCT_PreSetGraphAttr(OSD_BLINK);
                PCT_ShowVLoss();
                PCT_ClearGraphAttr();
                #endif
 353   1      #endif
 354   1        // -----------------------------------------------------
 355   1        SYSVDOSGL = MSGVDOSGL;
 356   1              
 357   1        #ifdef UTC
 358   1      
 359   1          if(((~MSGVDOSGL)&0x0f)==0)
 360   1            ;
 361   1          else  if((((~MSGVDOSGL)&0x0f)^sign)!=0)
 362   1          {
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 7   

 363   2            x=((~MSGVDOSGL)&0x0f)^sign;
 364   2            x=(x&((~MSGVDOSGL)&0x0f));
 365   2            
 366   2            if((x&0x01)==0x01)  
 367   2            {
 368   3              RS_tx('U');
 369   3              RS_tx('L');
 370   3              RS_tx('K');
 371   3            }
 372   2            else if((x&0x02)==0x02)
 373   2            {
 374   3              RS_tx('U');
 375   3              RS_tx('L');
 376   3              RS_tx('K');
 377   3            }
 378   2            else if((x&0x04)==0x04)
 379   2            {
 380   3              RS_tx('U');
 381   3              RS_tx('L');
 382   3              RS_tx('K');
 383   3            }
 384   2            else if((x&0x08)==0x08)
 385   2            {
 386   3              RS_tx('U');
 387   3              RS_tx('L');
 388   3              RS_tx('K');
 389   3            }
 390   2      
 391   2          }
 392   1        
 393   1        sign=((~MSGVDOSGL)&0x0f);
 394   1        #endif
 395   1      
 396   1      }
 397          
 398          // ===========================================================================
 399          //
 400          // Show '<-' on OSD when Trun LEFT
 401          // Show '->' on OSD when Trun RIGHT
 402          //
 403          #define ILCT_X0 28
 404          #define ILCT_X1 49
 405          #define ILCT_X2 70
 406          #define ICONBIT 0x0C
 407          #define ICONSFT 2
 408          
 409          code unsigned char indicate_icon[] = {
 410            0x20,'\0',  //+ 0x20,'\0',
 411            0x0B,'\0',  //+ 0x02,'\0',
 412            0x0C,'\0',  //+ 0x03,'\0',
 413            0x0D,'\0',  //+ 0x04,'\0',
 414          };
 415          
 416          void PCT_ShowIndicateIcon(PU8 _attr)
 417          {
 418   1        data U8 iconid;
 419   1      //  printf("Command Shell for HiSharp Set S or J Mode");
 420   1        
 421   1        PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
 422   1        switch(SYSMIXTYP) {
 423   2          // ------------------------------------ NTSC & PAL ----------------------------------------
 424   2          case VMIX_TYPE_N11: 
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 8   

 425   2          case VMIX_TYPE_P11: 
 426   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 427   2      
 428   2            if(iconid) {
 429   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 430   3              DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
 431   3            } 
 432   2            else {
 433   3              PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
 434   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 435   3              if (_attr[0] & 0x20)
 436   3              {
 437   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 438   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 439   4              }
 440   3              else
 441   3              {
 442   4                if (SYSMODE == 0) //Pinchi 20150422 add
 443   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 444   4              }
 445   3            #endif
 446   3            }
 447   2            break;
 448   2      
 449   2          case VMIX_TYPE_N21: 
 450   2          case VMIX_TYPE_P21: ////////////////////////////andy-980604
 451   2            // ---------- LEFT Windows ----------
 452   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 453   2      
 454   2            if(iconid) {
 455   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 456   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 457   3            }
 458   2            else {
 459   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);      
 460   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 461   3              if (_attr[0] & 0x20)
 462   3              {
 463   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 464   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 465   4              }
 466   3              else
 467   3              {
 468   4                if (SYSMODE == 0) //Pinchi 20150422 add
 469   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 470   4              }
 471   3            #endif
 472   3            }
 473   2      
 474   2            // ---------- RIGHT Windows ----------
 475   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 476   2            if(iconid) {
 477   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 478   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 479   3            }
 480   2            else {
 481   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 482   3            }
 483   2            break;
 484   2      
 485   2          case VMIX_TYPE_N22: 
 486   2          case VMIX_TYPE_P22: 
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 9   

 487   2            // ---------- LEFT Windows ----------
 488   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 489   2      
 490   2            if(iconid) {
 491   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 492   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 493   3            }
 494   2            else {
 495   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
 496   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 497   3              if (_attr[0] & 0x20)
 498   3              {
 499   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 500   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 501   4              }
 502   3              else
 503   3              {
 504   4                if (SYSMODE == 0) //Pinchi 20150422 add
 505   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 506   4              }
 507   3            #endif
 508   3            }
 509   2      
 510   2            // ---------- RIGHT Windows ----------
 511   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 512   2            if(iconid) {
 513   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 514   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 515   3            }
 516   2            else {
 517   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 518   3            }
 519   2            break;
 520   2      
 521   2          case VMIX_TYPE_N31: // Trun Back
 522   2          case VMIX_TYPE_P31: // Trun Back
 523   2            // ---------- Trun Back Window Show "|" ----------
 524   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 525   2      
 526   2            if(iconid) {
 527   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 528   3              DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
 529   3            }
 530   2            else {
 531   3              PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
 532   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 533   3              if (_attr[0] & 0x20)
 534   3              {
 535   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 536   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 537   4              }
 538   3              else
 539   3              {
 540   4                if (SYSMODE == 0) //Pinchi 20150422 add
 541   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 542   4              }
 543   3            #endif
 544   3            }
 545   2            break;
 546   2      
 547   2          case VMIX_TYPE_N32: 
 548   2          case VMIX_TYPE_P32: 
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 10  

 549   2            break;
 550   2      
 551   2          case VMIX_TYPE_N33: // Trun LEFT
 552   2          case VMIX_TYPE_P33: // Trun LEFT
 553   2            // ---------- Show "<-" ----------
 554   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 555   2      
 556   2            if(iconid) {
 557   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 558   3              DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
 559   3            }
 560   2            else {
 561   3              PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
 562   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 563   3              if (_attr[0] & 0x20)
 564   3              {
 565   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 566   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 567   4              }
 568   3              else
 569   3              {
 570   4                if (SYSMODE == 0) //Pinchi 20150422 add
 571   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 572   4              }
 573   3            #endif
 574   3            }
 575   2            break;
 576   2      
 577   2          case VMIX_TYPE_N34: // Trun RIGHT
 578   2          case VMIX_TYPE_P34: // Trun RIGHT
 579   2            // ---------- Show "->" ----------
 580   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 581   2      
 582   2            if(iconid) {
 583   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 584   3              DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
 585   3            }
 586   2            else {
 587   3              PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
 588   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 589   3              if (_attr[0] & 0x20)
 590   3              {
 591   4                PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
 592   4                DrawString(1, LOCATE_YT0, &indicate_icon[0]);
 593   4              }
 594   3              else
 595   3              {
 596   4                if (SYSMODE == 0) //Pinchi 20150422 add
 597   4                  PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
 598   4              }
 599   3            #endif
 600   3            }
 601   2            break;
 602   2      
 603   2          case VMIX_TYPE_N41: 
 604   2          case VMIX_TYPE_P41: 
 605   2            break;
 606   2      
 607   2          default:  
 608   2            break;
 609   2        }
 610   1      }
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 11  

 611          
 612          // ===========================================================================
 613          //
 614          // Show 'M'  on OSD when Video Mirror
 615          //
 616          #define MLCT_X0 23
 617          #define MLCT_X1 44
 618          #define MLCT_X2 65
 619          #define MIRROR  camstr[4]
 620          void PCT_ShowMirrorIcon(PU8 _attr)
 621          {
 622   1        PCT_PreSetForegroundColor(OSD_COL_YLW);
 623   1        switch(SYSMIXTYP) {
 624   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 625   2          // ------------------------------------ NTSC ----------------------------------------
 626   2          case VMIX_TYPE_N11: 
 627   2            // ---------- Window Show "M" ----------
 628   2            _ifBitSet(_attr[0],BIT0) {
 629   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 630   3            } else {
 631   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 632   3            }
 633   2            break;
 634   2      
 635   2          case VMIX_TYPE_N21: 
 636   2                  // ----------UP Window Show "M" ----------
 637   2            _ifBitSet(_attr[0],BIT0) {
 638   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 639   3            } else {
 640   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 641   3            }
 642   2                  // ----------DOWN Window Show "M" ----------
 643   2            _ifBitSet(_attr[1],BIT0) {
 644   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 645   3            } else {
 646   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 647   3            } 
 648   2            break;
 649   2      
 650   2          case VMIX_TYPE_N22: 
 651   2            // ---------- LEFT Window Show "M" ----------
 652   2            _ifBitSet(_attr[0],BIT0) {
 653   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 654   3            } else {
 655   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 656   3            }
 657   2      
 658   2            // ---------- RIGHT Window Show "M" ----------
 659   2            _ifBitSet(_attr[1],BIT0) {
 660   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 661   3            } else {
 662   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 663   3            }
 664   2      
 665   2            break;
 666   2      
 667   2          case VMIX_TYPE_N31: // Trun Back
 668   2            // ---------- TOP Window Show "M" ----------
 669   2            _ifBitSet(_attr[0],BIT0) {
 670   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 671   3            } else {
 672   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 12  

 673   3            }
 674   2      
 675   2            // ---------- LEFT Window Show "M" ----------
 676   2            _ifBitSet(_attr[1],BIT0) {
 677   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 678   3            } else {
 679   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 680   3            }
 681   2      
 682   2            // ---------- RIGHT Window Show "M" ----------
 683   2            _ifBitSet(_attr[2],BIT0) {
 684   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 685   3            } else {
 686   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 687   3            }
 688   2            break;
 689   2      
 690   2          case VMIX_TYPE_N32: 
 691   2            break;
 692   2      
 693   2          case VMIX_TYPE_N33: // Trun LEFT
 694   2            // ---------- LEFT Window Show "M" ----------
 695   2            _ifBitSet(_attr[0],BIT0) {
 696   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 697   3            } else {
 698   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 699   3            }
 700   2      
 701   2            // ---------- RIGHT_TOP Window Show "M" ----------
 702   2            _ifBitSet(_attr[1],BIT0) {
 703   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 704   3            } else {
 705   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 706   3            }
 707   2      
 708   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 709   2            _ifBitSet(_attr[2],BIT0) {
 710   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 711   3            } else {
 712   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 713   3            }
 714   2            break;
 715   2      
 716   2          case VMIX_TYPE_N34: // Trun RIGHT
 717   2            // ---------- LEFT_TOP Window Show "M" ----------
 718   2            _ifBitSet(_attr[0],BIT0) {
 719   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 720   3            } else {
 721   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 722   3            }
 723   2      
 724   2            // ---------- RIGHT Window Show "M" ----------
 725   2            _ifBitSet(_attr[1],BIT0) {
 726   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 727   3            } else {
 728   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 729   3            }
 730   2      
 731   2            // ---------- LEFT_DOWN Window Show "M" ----------
 732   2            _ifBitSet(_attr[2],BIT0) {
 733   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 734   3            } else {
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 13  

 735   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 736   3            }
 737   2            break;
 738   2      
 739   2          case VMIX_TYPE_N41: 
 740   2            // ---------- LEFT_TOP Window Show "M" ----------
 741   2            _ifBitSet(_attr[0],BIT0) {
 742   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 743   3            } else {
 744   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 745   3            }
 746   2      
 747   2            // ---------- RIGHT_TOP Window Show "M" ----------
 748   2            _ifBitSet(_attr[1],BIT0) {
 749   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 750   3            } else {
 751   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 752   3            }
 753   2      
 754   2            // ---------- LEFT_DOWN Window Show "M" ----------
 755   2            _ifBitSet(_attr[2],BIT0) {
 756   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 757   3            } else {
 758   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 759   3            }
 760   2      
 761   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 762   2            _ifBitSet(_attr[3],BIT0) {
 763   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 764   3            } else {
 765   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 766   3            }
 767   2            break;
 768   2      
 769   2          // ------------------------------------ PAL ----------------------------------------
 770   2          case VMIX_TYPE_P11: 
 771   2            // ---------- Window Show "M" ----------
 772   2            _ifBitSet(_attr[0],BIT0) {
 773   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 774   3            } else {
 775   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 776   3            }
 777   2            break;
 778   2      
 779   2          case VMIX_TYPE_P21: 
 780   2                   // ----------UP Window Show "M" ----------
 781   2            _ifBitSet(_attr[0],BIT0) {
 782   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 783   3            } else {
 784   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 785   3            }
 786   2                  // ----------DOWN Window Show "M" ----------
 787   2            _ifBitSet(_attr[1],BIT0) {
 788   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 789   3            } else {
 790   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 791   3            }
 792   2            break;
 793   2      
 794   2          case VMIX_TYPE_P22: 
 795   2            // ---------- LEFT Window Show "M" ----------
 796   2            _ifBitSet(_attr[0],BIT0) {
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 14  

 797   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 798   3            } else {
 799   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 800   3            }
 801   2      
 802   2            // ---------- RIGHT Window Show "M" ----------
 803   2            _ifBitSet(_attr[1],BIT0) {
 804   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 805   3            } else {
 806   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 807   3            }
 808   2      
 809   2            break;
 810   2      
 811   2          case VMIX_TYPE_P31: // Trun Back
 812   2            // ---------- TOP Window Show "M" ----------
 813   2            _ifBitSet(_attr[0],BIT0) {
 814   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 815   3            } else {
 816   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 817   3            }
 818   2      
 819   2            // ---------- LEFT Window Show "M" ----------
 820   2            _ifBitSet(_attr[1],BIT0) {
 821   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 822   3            } else {
 823   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 824   3            }
 825   2      
 826   2            // ---------- RIGHT Window Show "M" ----------
 827   2            _ifBitSet(_attr[2],BIT0) {
 828   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 829   3            } else {
 830   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 831   3            }
 832   2            break;
 833   2      
 834   2          case VMIX_TYPE_P32: 
 835   2            break;
 836   2      
 837   2          case VMIX_TYPE_P33: // Trun LEFT
 838   2            // ---------- LEFT Window Show "M" ----------
 839   2            _ifBitSet(_attr[0],BIT0) {
 840   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 841   3            } else {
 842   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 843   3            }
 844   2      
 845   2            // ---------- RIGHT_TOP Window Show "M" ----------
 846   2            _ifBitSet(_attr[1],BIT0) {
 847   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 848   3            } else {
 849   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 850   3            }
 851   2      
 852   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 853   2            _ifBitSet(_attr[2],BIT0) {
 854   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 855   3            } else {
 856   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 857   3            }
 858   2            break;
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 15  

 859   2      
 860   2          case VMIX_TYPE_P34: // Trun RIGHT
 861   2            // ---------- LEFT_TOP Window Show "M" ----------
 862   2            _ifBitSet(_attr[0],BIT0) {
 863   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 864   3            } else {
 865   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 866   3            }
 867   2      
 868   2            // ---------- RIGHT Window Show "M" ----------
 869   2            _ifBitSet(_attr[1],BIT0) {
 870   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 871   3            } else {
 872   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 873   3            }
 874   2      
 875   2            // ---------- LEFT_DOWN Window Show "M" ----------
 876   2            _ifBitSet(_attr[2],BIT0) {
 877   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 878   3            } else {
 879   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 880   3            }
 881   2            break;
 882   2      
 883   2          case VMIX_TYPE_P41: 
 884   2            // ---------- LEFT_TOP Window Show "M" ----------
 885   2            _ifBitSet(_attr[0],BIT0) {
 886   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 887   3            } else {
 888   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 889   3            }
 890   2      
 891   2            // ---------- RIGHT_TOP Window Show "M" ----------
 892   2            _ifBitSet(_attr[1],BIT0) {
 893   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 894   3            } else {
 895   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 896   3            }
 897   2      
 898   2            // ---------- LEFT_DOWN Window Show "M" ----------
 899   2            _ifBitSet(_attr[2],BIT0) {
 900   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
 901   3            } else {
 902   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
 903   3            }
 904   2      
 905   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 906   2            _ifBitSet(_attr[3],BIT0) {
 907   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
 908   3            } else {
 909   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
 910   3            }
 911   2            break;
 912   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 16  

                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 17  

                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 18  

                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 19  

                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 20  

                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1201   2      
1202   2          default:
1203   2            break;
1204   2        }
1205   1      }
1206          
1207          #define SLCT_X0 31
1208          #define SLCT_X1 52
1209          #define SLCT_X2 73
1210          //+ code unsigned char SPEAKICON[] = {0x01,'\0'};
1211          code unsigned char SPEAKICON[] = {0x0E,'\0'};
1212          // ===========================================================================
1213          //
1214          // Show Speak Icon on OSD 
1215          //
1216          #ifdef UTC
1217          #else
              void PCT_ShowSpeakIcon(PU8 _attr)
              {
                PCT_PreSetForegroundColor(OSD_COL_GRN);
                switch(SYSMIXTYP) {
                #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 21  

              
                  case VMIX_TYPE_N21:      //andy 980630
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 22  

                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    _ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 23  

                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 24  

                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    _ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 25  

                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 26  

                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 27  

              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
              
                  default:
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 28  

                    break;
                }
              }
              #endif
1669          
1670          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //Pinchi 20150422 modify to H center
              #define VLS_LCT_XM0 (LOCATE_XM0-4)-8
              #define VLS_LCT_XM1 (LOCATE_XM1-4)-8
              #define VLS_LCT_XM2 (LOCATE_XM2-4)-8
              #else
1676          #define VLS_LCT_XM0 LOCATE_XM0-4
1677          #define VLS_LCT_XM1 LOCATE_XM1-4
1678          #define VLS_LCT_XM2 LOCATE_XM2-4
1679          #endif
1680          
1681          #define LOCATE_YM0  7
1682          #define LOCATE_YM1  13
1683          #define LOCATE_YM2  21
1684          
1685          #define LOCATE_PYM0 8
1686          #define LOCATE_PYM1 16
1687          #define LOCATE_PYM2 25
1688          
1689          //H #define msgVLOSS "VLoss"
1690          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              code unsigned char msgVLOSS[]= {0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1c, 0x1d, 0x1e,'\0
             -'};
              
              #define msgCLEAR_W  15  //Pinchi 20150331 modify for lenghth of NO VIDEO SIGNAL
              #else
1695          code unsigned char msgVLOSS[]= {0x0F, 0x10, 0x11, 0x12, 0x12, '\0'};  // VLoss define for HiSharp
1696          //code unsigned char msgVLOSS[]= {'\0'};  // VLoss define for HiSharp   //william-v3.5-971001
1697          
1698          #define msgCLEAR_W  5
1699          #endif
1700          
1701          
1702          // ===========================================================================
1703          //
1704          // Show VLoss on OSD when Video Signal Loss
1705          //
1706          // ===========================================================================
1707          #ifdef HS
1708          #else
              void PCT_ShowVLoss(void)
              {
              #if 0  //Pinchi 20150325 disable
                data U8 tmpsta;
                tmpsta = SYSVDOSGL^MSGVDOSGL;
              #endif
              
                switch(SYSMIXTYP) {
                  // ------------------------------ NTSC ----------------------------
                  case VMIX_TYPE_N11: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_YM1, msgVLOSS) ;
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N21: 
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 29  

                    break;
              
                  case VMIX_TYPE_N22: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_N41: 
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 30  

                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
                      DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
                    break;
              
                  // ------------------------------ PAL ----------------------------
                  case VMIX_TYPE_P11: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_PYM1, msgVLOSS) ;
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM1, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
                    else
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 31  

                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  case VMIX_TYPE_P41: 
                    if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
                      DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
                    if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
                      DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
                    else
                      PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
                    break;
              
                  default:
                    break;
                }
              }
              #endif
1900          // ===========================================================================
1901          //
1902          // Show Control Mode OSD 
1903          //
1904          void PCT_ShowModeIcon(void)
1905          {
1906   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
1907   1        // Show System Mode 0:S or 1:J
1908   1        switch(SYSMODE)
1909   1        {
1910   2          case JMODE:
1911   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
C51 COMPILER V9.50a   OSDACTION                                                            03/28/2018 18:26:35 PAGE 32  

1912   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
1913   2            DrawString(1, 0, JMODEOSD);
1914   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
1915   2            break;  
1916   2      
1917   2          case SEQMODE:
1918   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
1919   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
1920   2            DrawString(1, 0, SEQMODEOSD);
1921   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
1922   2            break;
1923   2      
1924   2          case SMODE:
1925   2            break;
1926   2        }
1927   1      }
1928          
1929          // ===========================================================================
1930          //
1931          // Show Other OSD not Recviver Command in 50msec
1932          //
1933          void PCT_OSDActionForHS(void)
1934          {
1935   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
1936   1      #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
1937   1        _ifBitSet(SYSWINATTR[0],BIT1)
1938   1      #else
                ifBitSet(SYSWINATTR[0],BIT1)
              #endif
1941   1        {
1942   2      //    PCT_OSD_ActionPthX(SYSWINATTR);
1943   2          PCT_ShowMirrorIcon(SYSWINATTR);
1944   2          #ifdef UTC
1945   2          #else
                  PCT_ShowSpeakIcon(SYSWINATTR);
                  #endif    
1948   2          PCT_ShowIndicateIcon(SYSWINATTR);
1949   2        }
1950   1        PCT_EnfalshVLoss();//<960820-william>
1951   1        PCT_EnShowOSDPage(WRPHX_PAGE0);
1952   1      }
1953          
1954          
1955          // ===========================================================================
1956          // END of File 
1957          // ==========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2959    ----
   CONSTANT SIZE    =     37    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2      10
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
